diff -Naur --exclude .git gophernicus-2.5/.gitignore gophernicus-CGX/.gitignore
--- gophernicus-2.5/.gitignore	Fri Jun 16 07:44:31 2017
+++ gophernicus-CGX/.gitignore	Mon Nov 19 14:13:04 2018
@@ -12,7 +12,6 @@
 # Release files
 #
 *.gz
-ChangeLog
 
 #
 # Debian packaging leftovers
diff -Naur --exclude .git gophernicus-2.5/ChangeLog gophernicus-CGX/ChangeLog
--- gophernicus-2.5/ChangeLog	Sat Jun 24 23:02:56 2017
+++ gophernicus-CGX/ChangeLog	Mon Nov 19 22:21:30 2018
@@ -1,143 +1,12 @@
 [ Automatically generated from git log ]
 
-2017-06-24  Kim Holviala  <kim@holviala.com>
+2018-11-19  int16h  <int16h@openbsd.space>
 
-	* Released version 2.5
-	* Rewrote parsing of ;vhost?query<tab>search from selector
+	* Intitial TLS support
 
-2017-06-16  Kim Holviala  <kim@holviala.com>
+2014-12-15  James Mills  <prologic@shortcircuit.net.au>
 
-	* LICENSE was missing form release directory
-	* Removed ChangeLog from git (caused endless problems)
-	* hURL redirect pages now support https://
-	* README.Gophermap was missing form release directory
-
-2017-02-06  Kim Holviala  <kim@holviala.com>
-
-	* New -np option to disable HAproxy proxy protocol
-
-2017-02-04  Kim Holviala  <kim@holviala.com>
-
-	* Released version 2.4 "Millennium Edition"
-	* Fixed logging of TLS connections (using gophers:// protocol)
-	* Add TLS support for CGI apps and caps.txt via -T <tls port> option
-	* Fixed line wrapping in README
-
-2017-02-03  Kim Holviala  <kim@holviala.com>
-
-	* Released version 2.3
-	* Document the use of Stunnel4 for gopher over TLS
-	* Don't get TCP port number from user session data
-
-2017-02-02  Kim Holviala  <kim@holviala.com>
-
-	* Initial support for HAproxy/Stunnel proxy protocol v1
-	* Skip goto labels when generating functions.h
-
-2017-02-01  Kim Holviala  <kim@holviala.com>
-
-	* Fixed make clean to remove all old gophernicus-VERSION.tar.gz files
-	* Enabled large file support on 32-bit Linux and AIX
-	* Remove sendfile() support from Linux
-
-2016-12-30  Kim Holviala  <kim@holviala.com>
-
-	* Changed copyright years to include 2017 - Happy New Year
-
-2016-12-11  Kim Holviala  <kim@holviala.com>
-
-	* Released version 2.2
-	* Small fix for git2changelog so that it keeps \ and / in comments
-	* Fixed systemd-based installation for openSUSE and RedHat
-
-2016-11-14  Kim Holviala  <kim@holviala.com>
-
-	* Re-released version 2.1 \m/
-	* Ignore exit errors in systemd configuration
-
-2016-11-13  Kim Holviala  <kim@holviala.com>
-
-	* Updated TODO
-	* Released version 2.1
-	* Added systemd support for Debian package
-	* Removed dependency for update-inetd in Debian package
-	* Fix Debian package building for inetd systems
-	* Added systemd entries to Debian logcheck ignore file
-
-2016-10-18  Kim Holviala  <kim@holviala.com>
-
-	* Fixed a potentially uninitialized char in strcut()
-	* Autogenerated CAPS now shows release codename
-
-2016-09-08  Kim Holviala  <kim@holviala.com>
-
-	* Released version 2.0
-	* Updated deb package control files (still borken)
-
-2016-01-01  Kim Holviala  <kim@holviala.com>
-
-	* Released version 2.0-alpha "for Workgroups"
-	* Added option -v to display version number and build date
-	* Updated TODO (removed tasks that were done)
-	* Added detection for non-DMI Linux hypervisors (Xen)
-	* Added support for release codenames
-	* Fixed make install for non-systemd systems
-	* Added optional support for TCP wrappers
-
-2015-12-31  Kim Holviala  <kim@holviala.com>
-
-	* Installing now explicitly clears the SHM block Gophernicus uses
-
-2015-12-30  Kim Holviala  <kim@holviala.com>
-
-	* Updated TODO (removed tasks that are now done)
-	* Installation now shows the current configuration file
-	* Move configuration from systemd unit file to separate enviroment file
-	* Increased default page width from 70 to 76 chars
-	* Added detection for Gentoo Linux version
-	* Fixed installation for CentOS 7
-
-2015-12-29  Kim Holviala  <kim@holviala.com>
-
-	* Added install/uninstall support for Linux systemd
-	* Get hardware vendor and type from DMI data on Linux
-	* Tiny fix for 'make ChangeLog' to force overwrite of old file
-	* Added filetype definition for webm and ogv movies
-	* Fixed installation for Mac OSX 10.11 El Capitan
-	* Removed last remaining 'for inetd' form docs
-	* Removed 'for inetd' from docs because it's not a requirement
-	* Code needed more cows
-	* Changed copyright years to 2009-2016
-
-2015-10-16  Kim Holviala  <kim@holviala.com>
-
-	* Released version 1.8.1 (1.8 had broken gophermap support)
-	* Fix for executing shell commands inside gophermaps (previous commit broke this)
-
-2015-09-23  Kim Holviala  <kim@holviala.com>
-
-	* Released version 1.8
-	* Fix for executable gophermaps in directories with spaces (bugreport from Black Rider)
-	* Fixed whitespace formatting
-
-2015-03-02  Kim Holviala  <kim@holviala.com>
-
-	* Changed copyright years include 2015
-	* Released version 1.7
-
-2015-01-04  Kim Holviala  <kim@holviala.com>
-
-	* Added ServerDefaultEncoding to automatic caps.txt
-
-2015-01-01  Kim Holviala  <kim@holviala.com>
-
-	* Added ServerSupportsStdinScripts to automatic caps.txt
-
-2014-12-19  Kim Holviala  <kim@holviala.com>
-
-	* Fixed a comment & formatting
-	* Added detection for CRUX Linux
-	* Added $SESSION_ID environment variable for CGI scripts
+	* Improve counter example
 
 2014-11-10  Kim Holviala  <kim@holviala.com>
 
diff -Naur --exclude .git gophernicus-2.5/INSTALL gophernicus-CGX/INSTALL
--- gophernicus-2.5/INSTALL	Fri Jan  1 08:09:38 2016
+++ gophernicus-CGX/INSTALL	Mon Nov 19 14:13:04 2018
@@ -13,12 +13,16 @@
 $ make
 $ sudo make install
 
-That's it - Gophernicus should now be installed, preconfigured
-and running under gopher://<HOSTNAME>/. And more often than not,
-It Just Works(tm). If gopher links don't seem to work you may
-need to configure your public hostname explicitly in whatever
-config file Gophernicus is using.
+Then add the below line to your /etc/inetd.conf and restart
+inetd. If your system comes with something else than standard
+inetd "make install" should have done the right thing already.
 
+gopher  stream  tcp  nowait  nobody  /usr/sbin/in.gophernicus  in.gophernicus -h <hostname>
+
+The -h <hostname> parameter is mandatory for a properly working
+Gophernicus. Other parameters can also be added, see the full
+list by running "/usr/sbin/in.gophernicus -?"
+
 By default Gophernicus serves gopher documents from /var/gopher
 although that can be changed by using the -r <root> parameter.
 To enable virtual hosting create hostname directories under
@@ -27,33 +31,6 @@
 (mkdir /var/gopher/$HOSTNAME).
 
 
-Compiling with TCP wrappers
-===========================
-
-Gophernicus uses no extra libraries... well... except libwrap
-(TCP wrappers) if it is installed with headers in default Unix
-directories at the time of compiling. If you have the headers
-installed and don't want wrapper support, run 'make generic'
-instead of just 'make', and if you have wrappers installed in
-non-standard place and want to force compile with wrappers
-just run 'make withwrap'.
-
-For configuring IP access lists with TCP wrappers, take a look
-at the files /etc/hosts.allow and /etc/hosts.deny (because the
-manual pages suck). Use the daemon name 'in.gophernicus' to
-make your access lists.
-
-
-Running with traditional inetd superserver
-==========================================
-
-If you want to run Gophernicus under the traditional Unix
-inetd, add the below line to your /etc/inetd.conf and restart
-the inetd process.
-
-gopher  stream  tcp  nowait  nobody  /usr/sbin/in.gophernicus  in.gophernicus -h <hostname>
-
-
 Compiling on Debian Linux (and Ubuntu)
 ======================================
 
@@ -66,10 +43,15 @@
 "dpkg -i ../gophernicus_*.deb" after which It Should Just
 Work(tm).
 
-If you need TCP wrappers support on Debian/Ubuntu, please
-install libwrap0-dev before compiling.
 
+Compiling on Mac OS X
+=====================
 
+When you run "make install" on OSX-like system with launchd
+the install routine also installs a plist file and tells launchd
+to start the server up. In other words, It Just Works(tm).
+
+
 Cross-compiling
 ===============
 
@@ -88,14 +70,16 @@
 statistics. It creates the shared memory block using mode 600
 and a predefined key which means that a shared memory block
 created with one user cannot be used by another user. Simply
-said, running in.gophernicus under various different user
-accounts may create a situation where the memory block is locked
-to the wrong user.
+said, running in.gophernicus as yourself will allocate that
+memory, and then running the binary through inetd as another
+user (nobody) will be denied access to that memory.
 
 If that happens you can simply delete the memory block and
-let Gophernicus recreate it - no harm done:
+let Gophernicus recreate it - no harm done.
 
-$ sudo make clean-shm
+$ su -
+# ipcs -m | grep beeb
+# ipcrm -M <key from the above command>
 
 
 Porting to different platforms
@@ -110,23 +94,21 @@
 
 Tested (and semi-supported) platforms include:
 
-  OS              Arch          Compiler
- +---------------+-------------+-------------+
-  AIX 5           POWER3        gcc 4
-  AIX 6           POWER4        gcc 4
-  AIX 7           POWER5        gcc 4
-  CentOS 5        x86_64        gcc 4
-  CentOS 7        x86_64        gcc 4
-  Debian Squeeze  armv5tel      gcc 4
-  Debian Wheezy   i386          gcc 4
-  Debian Wheezy   x86_64        gcc 4
-  Debian Jessie   x86_64        gcc 4
-  Maemo 5         armv7l        gcc 4
-  MacOSX 10.5     i386          gcc 4
-  MacOSX 10.7     x86_64        llvm-gcc 4
-  MacOSX 10.8     x86_64        clang 3
-  MacOSX 10.10    x86_64        clang 6
-  MacOSX 10.11    x86_64        clang 7
-  NetBSD 5        x86_64        gcc 4
-  Haiku R1        i386          gcc 2
+  OS            Arch          Compiler
+ +-------------+-------------+-------------+
+  AIX 5         POWER3        gcc 4
+  AIX 6         POWER4        gcc 4
+  AIX 7         POWER5        gcc 4
+  CentOS 5      x86_64        gcc 4
+  Debian Linux  i386          gcc 4
+  Debian Linux  armv5tel      gcc 4
+  Maemo 5       armv7l        gcc 4
+  MacOSX 10.5   i386          gcc 4
+  MacOSX 10.7   x86_64        llvm-gcc 4
+  MacOSX 10.8   x86_64        clang 3
+  MacOSX 10.10  x86_64        clang 6
+  NetBSD 5      x86_64        gcc 4
+  Haiku R1      i386          gcc 2
+
+
 
diff -Naur --exclude .git gophernicus-2.5/LICENSE gophernicus-CGX/LICENSE
--- gophernicus-2.5/LICENSE	Wed Feb  1 08:36:43 2017
+++ gophernicus-CGX/LICENSE	Mon Nov 19 21:50:39 2018
@@ -1,4 +1,5 @@
-Gophernicus - Copyright (c) 2009-2017 Kim Holviala <kim@holviala.com>
+Gophernicus - Copyright (c) 2009-2014 Kim Holviala <kim@holviala.com>
+                                 2018 0x16h / int16h <int16h@openbsd.space>
 All rights reserved.
 
 Redistribution and use in source and binary forms, with or without
diff -Naur --exclude .git gophernicus-2.5/Makefile gophernicus-CGX/Makefile
--- gophernicus-2.5/Makefile	Sat Jun 24 16:54:48 2017
+++ gophernicus-CGX/Makefile	Mon Nov 19 22:24:37 2018
@@ -5,11 +5,10 @@
 #
 # Variables and default configuration
 #
-NAME     = gophernicus
-PACKAGE  = $(NAME)
-BINARY   = in.$(NAME)
-VERSION  = 2.5
-CODENAME = Millennium Edition
+NAME    = gophernicus
+PACKAGE = $(NAME)
+BINARY  = in.$(NAME)
+VERSION = 1.6
 
 SOURCES = $(NAME).c file.c menu.c string.c platform.c session.c options.c
 HEADERS = functions.h files.h
@@ -18,7 +17,6 @@
 
 INSTALL = PATH=$$PATH:/usr/sbin ./install-sh -o 0 -g 0
 DESTDIR = /usr
-OSXDEST = /usr/local
 SBINDIR = $(DESTDIR)/sbin
 DOCDIR  = $(DESTDIR)/share/doc/$(PACKAGE)
 
@@ -30,51 +28,44 @@
 INETD   = /etc/inetd.conf
 XINETD  = /etc/xinetd.d
 LAUNCHD = /Library/LaunchDaemons
-PLIST   = org.$(NAME).server.plist
+PLIST   = org.gophernicus.server.plist
 NET_SRV = /boot/common/settings/network/services
-SYSTEMD = /lib/systemd/system /usr/lib/systemd/system
-HAS_STD = /run/systemd/system
-SYSCONF = /etc/sysconfig
-DEFAULT = /etc/default
 
 DIST    = $(PACKAGE)-$(VERSION)
 TGZ     = $(DIST).tar.gz
-RELDIR  = $(ROOT)/gophernicus.org/software/gophernicus/
+RELDIR  = /var/gopher/gophernicus.org/software/gophernicus/
 
 CC      = gcc
 HOSTCC	= $(CC)
 CFLAGS  = -O2 -Wall
 LDFLAGS = 
 
-IPCRM   = /usr/bin/ipcrm
 
-
 #
 # Platform support, compatible with both BSD and GNU make
 #
 all:
 	@case `uname` in \
-		Darwin)	$(MAKE) ROOT="$(OSXROOT)" DESTDIR="$(OSXDEST)" $(BINARY); ;; \
-		Haiku)	$(MAKE) EXTRA_LDFLAGS="-lnetwork" $(BINARY); ;; \
-		*)	if [ -f "/usr/include/tcpd.h" ]; then $(MAKE) withwrap; else $(MAKE) $(BINARY); fi; ;; \
+		Darwin)  $(MAKE) ROOT="$(OSXROOT)" $(BINARY); ;; \
+		Haiku)   $(MAKE) EXTRA_LDFLAGS="-lnetwork" $(BINARY); ;; \
+		OpenBSD) $(MAKE) EXTRA_LDFLAGS="-ltls -lssl -lcrypto" $(BINARY); ;; \
+		*)       $(MAKE) $(BINARY); ;; \
 	esac
 
 generic: $(BINARY)
 
-withwrap:
-	$(MAKE) EXTRA_CFLAGS="-DHAVE_LIBWRAP" EXTRA_LDFLAGS="-lwrap" $(BINARY)
 
-
 #
 # Special targets
 #
-deb:
+deb: ChangeLog
 	dpkg-buildpackage -rfakeroot -uc -us
 
 ChangeLog:
 	if [ -d .git ]; then \
-		(./git2changelog > ChangeLog; \
-		cat changelog.old >> ChangeLog); \
+		(./git2changelog > .ChangeLog; \
+		sed -ne '/2012-12-02/,$$p' ChangeLog >> .ChangeLog; \
+		mv .ChangeLog ChangeLog); \
 	else true; fi
 
 .PHONY: ChangeLog
@@ -89,7 +80,7 @@
 	$(CC) $(LDFLAGS) $(EXTRA_LDFLAGS) $(OBJECTS) -o $@
 
 .c.o:
-	$(CC) -c $(CFLAGS) $(EXTRA_CFLAGS) -DVERSION="\"$(VERSION)\"" -DCODENAME="\"$(CODENAME)\"" -DDEFAULT_ROOT="\"$(ROOT)\"" $< -o $@
+	$(CC) -c $(CFLAGS) $(EXTRA_CFLAGS) -DVERSION="\"$(VERSION)\"" -DDEFAULT_ROOT="\"$(ROOT)\"" $< -o $@
 
 
 headers: $(HEADERS)
@@ -101,7 +92,6 @@
 	grep -h "^[a-z]" $(SOURCES) | \
 		grep -v "int main" | \
 		grep -v "strlc" | \
-		grep -v "[a-z]:" | \
 		sed -e "s/ =.*$$//" -e "s/ *$$/;/" >> $@
 	@echo
 
@@ -123,28 +113,24 @@
 clean: clean-build clean-deb
 
 clean-build:
-	rm -f $(BINARY) $(OBJECTS) $(PACKAGE)-*.tar.gz $(HEADERS) README.options bin2c
+	rm -f $(BINARY) $(OBJECTS) $(TGZ) $(HEADERS) README.options bin2c .ChangeLog
 
 clean-deb:
 	if [ -d debian/$(PACKAGE) ]; then fakeroot debian/rules clean; fi
 
-clean-shm:
-	if [ -x $(IPCRM) ]; then $(IPCRM) -M `awk '/SHM_KEY/ { print $$3 }' $(NAME).h` || true; fi
 
-
 #
 # Install targets
 #
-install: ChangeLog clean-shm
+install: ChangeLog
 	@case `uname` in \
-		Darwin)  $(MAKE) ROOT="$(OSXROOT)" DESTDIR="$(OSXDEST)" install-files install-docs install-root install-osx install-done; ;; \
+		Darwin)  $(MAKE) ROOT="$(OSXROOT)" install-files install-docs install-root install-osx install-done; ;; \
 		Haiku)   $(MAKE) SBINDIR=/boot/common/bin DOCDIR=/boot/common/share/doc/$(PACKAGE) \
 		                 install-files install-docs install-root install-haiku install-done; ;; \
 		*)       $(MAKE) install-files install-docs install-root; ;; \
 	esac
-	@if [ -d "$(HAS_STD)" ]; then $(MAKE) install-systemd install-done; \
-	elif [ -d "$(XINETD)" ]; then $(MAKE) install-xinetd install-done; \
-	elif [ -f "$(INETD)"  ]; then $(MAKE) install-inetd; fi
+	@if [ -d "$(XINETD)" ]; then $(MAKE) install-xinetd install-done; fi
+	@if [ -f "$(INETD)" ]; then $(MAKE) install-inetd; fi
 
 .PHONY: install
 
@@ -153,17 +139,9 @@
 	@echo "======================================================================"
 	@echo
 	@echo "Gophernicus has now been succesfully installed. To try it out, launch"
-	@echo "your favorite gopher browser and navigate to your gopher root."
+	@echo "your favorite gopher browser and navigate to this URL:"
 	@echo
-	@echo "Gopher URL...: gopher://`hostname`/"
-	@for CONFFILE in /etc/sysconfig/gophernicus \
-		/etc/default/gophernicus \
-		/Library/LaunchDaemons/org.gophernicus.server.plist \
-		/boot/common/settings/network/services \
-		/lib/systemd/system/gophernicus\@.service \
-		/etc/xinetd.d/gophernicus \
-		/etc/inetd.conf; do \
-			if [ -f $$CONFFILE ]; then echo "Configuration: $$CONFFILE"; break; fi; done;
+	@echo "              gopher://`hostname`/"
 	@echo
 	@echo "======================================================================"
 	@echo
@@ -179,7 +157,7 @@
 	@echo
 
 install-root:
-	if [ ! -d "$(ROOT)" -o ! -f "$(ROOT)/$(MAP)" ]; then \
+	if [ ! -d "$(ROOT)" ]; then \
 		mkdir -p $(ROOT); \
 		$(INSTALL) -m 644 $(MAP) $(ROOT); \
 		ln -s $(DOCDIR) $(ROOT)/docs; \
@@ -209,7 +187,8 @@
 
 install-osx:
 	if [ -d "$(LAUNCHD)" -a ! -f "$(LAUNCHD)/$(PLIST)" ]; then \
-		sed -e "s/@HOSTNAME@/`hostname`/g" $(PLIST) > $(LAUNCHD)/$(PLIST); \
+		sed -e "s/@HOSTNAME@/`hostname`/g" org.gophernicus.server.plist > \
+			$(LAUNCHD)/$(PLIST); \
 		launchctl load $(LAUNCHD)/$(PLIST); \
 	fi
 	@echo
@@ -224,7 +203,7 @@
 		echo "	family inet"; \
 		echo "	protocol tcp"; \
 		echo "	port 70"; \
-		echo "	launch $(BINARY) -h `hostname`"; \
+		echo "	launch in.gophernicus -h `hostname`"; \
 		echo "}") >> $(NET_SRV); \
 	fi
 	@echo
@@ -234,30 +213,24 @@
 	nohup /boot/system/servers/net_server >/dev/null 2>/dev/null &
 	@echo
 
-install-systemd:
-	if [ -d "$(HAS_STD)" ]; then \
-		if [ -d "$(SYSCONF)" -a ! -f "$(SYSCONF)/$(NAME)" ]; then \
-			$(INSTALL) -m 644 $(NAME).env $(SYSCONF)/$(NAME); \
-		fi; \
-		if [ ! -d "$(SYSCONF)" -a -d "$(DEFAULT)" -a ! -f $(DEFAULT)/$(NAME) ]; then \
-			$(INSTALL) -m 644 $(NAME).env $(DEFAULT)/$(NAME); \
-		fi; \
-		for DIR in $(SYSTEMD); do \
-			if [ -d "$$DIR" ]; then \
-				$(INSTALL) -m 644 $(NAME).socket $(NAME)\@.service $$DIR; \
-				break; \
-			fi; \
-		done; \
-		systemctl daemon-reload; \
-		systemctl enable $(NAME).socket; \
-		systemctl start $(NAME).socket; \
-	fi
-	@echo
+#
+# Self-signed key target
+#
 
+key:
+	openssl req -newkey rsa:4096 -nodes -sha512 -x509 -days 3650 -nodes \
+		-subj "/C=UK/ST=London/O=Gophernicus/OU=gopherd/CN=localhost" \
+		-out gophernicus.pem -keyout gophernicus.key
+
+key-install:
+	$(INSTALL) -m 640 gophernicus.pem /etc/ssl/
+	$(INSTALL) -m 600 gophernicus.key /etc/ssl/
+	chown _gophernicus /etc/ssl/gophernicus.pem
+	chown _gophernicus /etc/ssl/gophernicus.key
 #
 # Uninstall targets
 #
-uninstall: uninstall-xinetd uninstall-launchd uninstall-systemd
+uninstall: uninstall-xinetd uninstall-launchd
 	rm -f $(SBINDIR)/$(BINARY)
 	for DOC in $(DOCS); do rm -f $(DOCDIR)/$$DOC; done
 	rmdir -p $(SBINDIR) $(DOCDIR) 2>/dev/null || true
@@ -280,19 +253,6 @@
 	fi
 	@echo
 
-uninstall-systemd:
-	if [ -d "$(HAS_STD)" ]; then \
-		for DIR in $(SYSTEMD); do \
-			if [ -f "$$DIR/$(NAME).socket" ]; then \
-				systemctl stop $(NAME).socket; \
-				systemctl disable $(NAME).socket; \
-				rm -f $$DIR/$(NAME).socket $$DIR/$(NAME)\@.service $(SYSCONF)/$(NAME) $(DEFAULT)/$(NAME); \
-				systemctl daemon-reload; \
-				break; \
-			fi; \
-		done; \
-	fi
-	@echo
 
 #
 # Release targets
@@ -305,13 +265,13 @@
 
 release: dist
 	cp $(TGZ) $(RELDIR)
-	cp README README.Gophermap INSTALL LICENSE ChangeLog $(RELDIR)
+	cp README INSTALL ChangeLog $(RELDIR)
 
 
 #
 # List all C defines
 #
-defines: functions.h files.h
+defines:
 	$(CC) -dM -E $(NAME).c
 
 
diff -Naur --exclude .git gophernicus-2.5/README gophernicus-CGX/README
--- gophernicus-2.5/README	Mon Feb  6 12:12:06 2017
+++ gophernicus-CGX/README	Mon Nov 19 23:00:03 2018
@@ -1,12 +1,13 @@
-Gophernicus - Copyright (c) 2009-2017 Kim Holviala <kim@holviala.com>
+Gophernicus - Copyright (c) 2009-2014 Kim Holviala <kim@holviala.com>
+                            2018 0x16h / int16h <int16h@openbsd.space
 
 Gophernicus is a modern full-featured (and hopefully) secure gopher
-daemon. It is licensed under the BSD license.
+daemon for inetd. It is licensed under the BSD license.
 
 Command line options:
     -h hostname   Change server hostname (FQDN)      [$HOSTNAME]
     -p port       Change server port                 [70]
-    -T port       Change TLS/SSL port                [0 = disabled]
+    -z 1          Enable TLS                         [0]          
     -r root       Change gopher root                 [/var/gopher]
     -t type       Change default gopher filetype     [0]
     -g mapfile    Change gophermap file              [gophermap]
@@ -15,7 +16,7 @@
     -u userdir    Change users personal gopherspace  [public_gopher]
     -l logfile    Log to Apache-compatible combined format logfile
 
-    -w width      Change default page width          [76]
+    -w width      Change default page width          [70]
     -o charset    Change default output charset      [US-ASCII]
 
     -s seconds    Session timeout in seconds         [1800]
@@ -42,10 +43,8 @@
     -na           Disable autogenerated caps.txt
     -nm           Disable shared memory use (for debugging)
     -nr           Disable root user checking (for debugging)
-    -np           Disable HAproxy proxy protocol
 
     -d            Debug to syslog (not for production use)
-    -v            Display version number and build date
     -b            Display the BSD license
     -?            Display this help
  
@@ -57,14 +56,13 @@
 up the gopher root directory. By default Gophernicus serves documents
 from /var/gopher so start by creating that directory and making sure
 it's world-readable. Then, simply add files and directories under your
-root, fire up a gopher browser (Firefox with the OverbiteFF extension,
-Lynx) and open up this URL:
+root, fire up a gopher browser (Firefox, Lynx) and open up this URL:
 
-gopher://<HOSTNAME>/   (where <HOSTNAME> is your server hostname)
+gopher://<HOSTNAME>/   (where <HOSTNAME> is your servers hostname)
 
 That's it, your first gopher site is now up and running. If the links
-on the root menu don't work make sure you are using the -h <HOSTNAME>
-parameter in your configuration (with a valid resolveable hostname
+on the root menu don't work, make sure you are using the -h <HOSTNAME>
+parameter in your inetd.conf (with a valid resolveable hostname
 instead of <HOSTNAME> - see INSTALL).
 
 
@@ -237,55 +235,5 @@
 monitoring systems. To ease up such integrations, Gophernicus
 supports HTTP requests of the server-status page using an URL like
 http://<HOSTNAME>:70/server-status?auto
-
-
-TLS/SSL and proxy support
-=========================
-
-As of version 2.3 Gophernicus supports the HAproxy proxy protocol
-version 1. This makes it possible to build a cluster of gopher servers
-and use HAproxy in front of them all handling client routing to different
-backend servers.
-
-More useful is putting Gophernicus behind Stunnel4 for TLS/SSL support
-and use the same proxy protocol to tell Gophernicus the correct remote IP
-address. The below sample stunnel configuration is all you need to
-TLS-enable your gopher server. Well, you'll need a certificate too and for
-that I recommend Let's Encrypt.
-
-In addition to configuring Stunnel for TLS you should add -T <TLS port>
-to Gophernicus options so that it knows which connetions are coming in
-encrypted and which are not. Using proper -T also makes it possible for
-CGI programs to use the $TLS environment variable to know whether the
-current request was encrypted or not.
-
-
-;
-; Gophernicus behind Stunnel4 for gopher over TLS
-;
-
-; User/group for stunnel daemon
-setuid = stunnel4
-setgid = stunnel4
-
-; PID file location
-pid = /var/run/stunnel4/gophernicus.pid
-
-; Log to file, not syslog
-output = /var/log/stunnel4/gophernicus.log
-syslog = no
-
-; Certificate in pem format is needed for TLS
-cert = /etc/ssl/private/gophernicus.pem
-
-; Enable TCP wrappers
-libwrap = yes
-service = in.gophernicus-tls
-
-; Gopher over TLS service
-[gophernicus]
-accept  = :::7070
-connect = 127.0.0.1:70
-protocol = proxy
 
 
diff -Naur --exclude .git gophernicus-2.5/README.Gophermap gophernicus-CGX/README.Gophermap
--- gophernicus-2.5/README.Gophermap	Tue Dec 29 10:13:00 2015
+++ gophernicus-CGX/README.Gophermap	Mon Nov 19 14:13:04 2018
@@ -59,7 +59,7 @@
 Additional type characters supported by Gophernicus:
    #          comment - rest of the line is ignored
    !title     menu title (use on the first line)
-   -file      hide file from listings
+   -file      hide the file from listings
    :ext=type  change filetype (for this directory only)
    ~          include a list of users with valid ~/public_gopher
    %          include a list of available virtual hosts
diff -Naur --exclude .git gophernicus-2.5/README.md gophernicus-CGX/README.md
--- gophernicus-2.5/README.md	Thu Jan  1 01:00:00 1970
+++ gophernicus-CGX/README.md	Tue Nov 20 01:10:20 2018
@@ -0,0 +1,35 @@
+#### Gophernicus-TLS
+
+This fork of Gophernicus includes explicit TLS support for OpenBSD.
+
+Building:
+
+    $ make key
+    $ make
+
+Install:
+
+    $ doas make key-install
+    $ doas make install
+    $ doas echo "gopher stream tcp nowait _gophernicus /usr/local/libexec/in.gophernicus in.gophernicus -h localhost" >> /etc/inetd.conf
+    $ doas echo "gophers stream tcp nowait _gophernicus /usr/local/libexec/in.gophernicus in.gophernicus-tls -h localhost -p 343 -z 1" >> /etc/inetd.conf
+
+Because there is no IANA-designated port for Gopher over TLS, add 'gophers' to /etc/services:
+
+    gophers     343/tcp
+
+TLS defaults (chown _gophernicus gophernicus* && chmod 600 gophernicus*):
+
+    TLS_CA    "/etc/ssl/cert.pem"
+    TLS_CERT  "/etc/ssl/gophernicus.pem"
+    TLS_KEY   "/etc/ssl/gophernicus.key"
+
+Run:
+
+    $ doas pkg_add gopher socat
+    $ rcctl -f start inetd
+    $ ./client.sh 12444
+
+Caveats:
+
+- socat's fork option breaks things; not using fork breaks things - need to add proper TLS support to gopher(1)
diff -Naur --exclude .git gophernicus-2.5/TODO gophernicus-CGX/TODO
--- gophernicus-2.5/TODO	Fri Feb  3 20:56:28 2017
+++ gophernicus-CGX/TODO	Tue Nov 20 01:39:09 2018
@@ -1,7 +1,18 @@
-Possible future development:
+20-Nov-18:
+	* Add pledge(2) and unveil(2) support for OpenBSD
 
-	* RPM package
-	* Add support for mmap() in addition to SHM (for Haiku/R1)
+Things I should work on:
+
+	* Replace SHM with mmap()
+	* Support for systemd (yech!)
+	* Support for upstart (slightly less yech!)
+
+
+Things I might work on:
+
+	* Support for config files
+	* Standalone pre-forked (threaded?) version
 	* Password-protected resources
+	* Allow/Deny per IP/host
 	* Automated feature testing script
-
+	* SSL/TLS
diff -Naur --exclude .git gophernicus-2.5/changelog.old gophernicus-CGX/changelog.old
--- gophernicus-2.5/changelog.old	Fri Jun 16 08:04:59 2017
+++ gophernicus-CGX/changelog.old	Thu Jan  1 01:00:00 1970
@@ -1,251 +0,0 @@
-2012-12-02  Kim Holviala  <kim@holviala.com>
-
-	* Released version 1.4
-	* Added logcheck ignore file for Debian
-	* Fixed compile without HAVE_SHMEM
-	* Autogenerated caps.txt now works without SHMEM
-	* Support for Haiku R1 (make && make install works)
-	* CGIs now have $LOCAL_ADDR
-	* Debian package no longer depends on lsb-release
-	* CPU type is now properly detected on AIX
-	* Makefile supports cross-compiling (CC & HOSTCC)
-	* Option -nr disables root user checking (for debugging)
-	* Platform detection for Linux/mips boards (routers)
-	* Fixes for OpenBSD (thanks to Brian Callahan)
-	* Last remaining sprintf() replaced with snprintf()
-	* max() is no longer a function but a #define
-	* Clang fixes (thanks to Jacob Dahl Pind)
-	* Removed system-info.sh & dmidecode from Debian package
-
-
-2012-06-12  Kim Holviala  <kim@holviala.com>
-
-	* Released version 1.3
-	* Support for headerless HTTP/0.9
-	* Code cleanups
-	* Platform probing now knows about RedHat and Slackware
-	* lsb_release no longer gets called if it doesn't exist
-	  (bugreport from Jacob Dahl Pind)
-	* Changed menu errors from type "i" text to type "3"
-	  (bugreport from Damien Carol)
-	* Removed the special OSX Carbonized build
-	* Fixed a bug in menu.c: popen() needs pclose()
-	* Fixed a off-by-one in gopher_filetype()
-	* Changed the filetype of documents (doc/ps/pdf) to "d"
-
-
-2012-05-04  Kim Holviala  <kim@holviala.com>
-
-	* Released version 1.2 (finally...)
-	* On the fly selector rewriting (like Apache mod_rewrite)
-	* Gophertags are properly converted to output charset
-	* Server admin email can be specified for caps.txt
-	* Server location for caps.txt
-	* Split options.c from gophernicus.c
-	* Removed support for Gopher over HTTP proxies
-	* Hack to make "gopher example.com" work
-	  (UMN gopher client assumes gopher+ which we don't support)
-
-
-2010-12-01  Kim Holviala  <kim@holviala.com>
-
-	* Released version 1.1
-	* Content-based detection of gif/png/jpg/ps/pdf/html/gz
-	* Gophermap virtual host list (%) only lists FQDNs
-	* Serve out caps.txt from a file if it exists
-	* Option -na disables autogenerated caps.txt
-	* Changed option -l to -b (show BSD license)
-	* Changed option -m to -l (log to file)
-	* README and LICENSE weren't zero-terminated strings (duh)
-	* Querying /server-status no longer updates statistics
-	  (because Munin statistics collection was being throttled)
-	* Internal charset variables are now enums and not strings
-
-
-2010-10-05  Kim Holviala  <kim@holviala.com>
-
-	* Released version 1.0
-	* Support for caps.txt as suggested by Cameron Kaiser
-	* Support for gophertags (lifted from Bucktooth)
-	* HTTP requests are redirected to a public gopher proxy
-	* Allow directories named "gophermap" and "gophertag"
-	  (only files are special)
-	* Removed duplicate call to strniconv()
-	* A few ENABLE_STRICT_RFC1436 additions
-	* Much more descriptive error logging
-	* Self references /./ are removed from request
-	* Apache-compatible file logging in combined log format (-m)
-	* FIFOs in directories no longer crash the server (duh!)
-	* Support for Mac OS X (tested with 10.5 on Intel)
-	* Reworked Makefile with platform-specific build targets
-	* Fixed a call to dirname(path) (don't assume it modifies path)
-        * Makefile installer now supports xinetd and launchd
-	* Makefile installer installs default /var/gopher/gophermap and
-	  links the document directory as /docs/
-	* Added SERVER_ARCH, SERVER_VERSION and SERVER_DESCRIPTION to
-	  CGI env variables
-	* Fixed a segfault where shm was used uninitialized (duh!)
-	* Generate native Debian/Ubuntu package with "make deb"
-	* platform() now tries to figure out Linux distribution
-	* platform() knows about Linux ARM boards
-	* Added argument -nm (No shared Memory) for debugging
-	* Fixed AIX make glitch when compiling bin2c (bug in make?)
-	* Changed the name of the project from "Gophernicus Server"
-	  to plain "Gophernicus"
-	* Menus without footer (-nf) were missing the dot at the end
-	* Footer message is now right-aligned
-	* server-status and caps.txt requests now update sessions
-	* Compile-time option ENABLE_AUTOHIDING hides manually listed
-	  resources from generated menus (to prevent double listings)
-
-
-2010-07-03  Kim Holviala  <kim@holviala.com>
-
-	* Released version 0.9
-	* Added option to disable HTTP-style query strings
-	* Fixed a regression where some binary files were served out
-	  as text (which broke them)
-	* BinHex files are now mapped to filetype 4
-	* Disabling vhosting disables sessions (mostly)
-
-
-2010-04-30  Kim Holviala  <kim@holviala.com>
-
-	* Released version 0.8
-	* Security bug in hURL handler fixed
-	* Error pages are now correctly generated for type 'h'
-	* Menu error page more compatible with clients
-	* New macro sstrncmp() compares without explicit sizeof()
-	* Removed all traces of gopher++ protocol (extra headers)
-	  as it just didn't work with older (circa '92) servers
-	* Added option to disable automatic menu headers (titles)
-	* Do a chdir() to the resource dir before doing anything
-	* Double-slashes were slashed in QUERY_STRING by accident
-	* Relative links to external hosts work properly in gophermap
-	* Gophermaps can include other gophermaps with =/path/to/file
-	* Executable gophermaps are parsed just like static ones
-
-
-2010-04-13  Kim Holviala  <kim@holviala.com>
-
-	* Released version 0.7
-	* This release is feature complete, no new features in sight
-	* Support for NetBSD (a typo prevented building - duh)
-	* Replaced the poorly-working scandir() with opendir/qsort
-	* Directory listings (menus) are limited to 1024 entries
-	* Changed the filetype of movies from "v" to ";" (which sucks)
-	* Fixed a compatibility issue with bucktooth gophermaps
-	* Finally wrote decent documentation (README and INSTALL)
-
-
-2010-04-11  Kim Holviala  <kim@holviala.com>
-
-	* Released version 0.6
-	* platform() results are kept in shared memory
-	* Support for AIX 5.1 and newer
-	* IPv4-in-IPv6 prefix ::ffff: is removed from remote_addr
-	* Replaced install(1) with the install-sh script
-	* /server-status CPULoad can be parsed from /usr/bin/uptime
-	* Replaced text2c/hexdump with bin2c.c (less dependencies)
-	* Files with extension .q (type 7 query) are considered CGIs
-	* Filetype handling completely rewritten
-	* Configurable gopher filetypes using the "-e ext=X" argument
-	* Per-directory filetype overrides in gophermaps with ":ext=X"
-	* Refuse to serve out gophermaps (why didn't I catch this before?)
-	* Cleaned up main()
-	* Output filters - run files through an external program (php!)
-
-
-2010-04-05  Kim Holviala  <kim@holviala.com>
-
-	* Released version 0.5
-	* Code tested to work on 32-bit Linux/armv5tel
-	* Filetype 7 query errors are now handled properly
-	* HTTP-style query string overrides type 7 query
-	* Protocol detection (0/+/++) works properly
-	* gopher++ extra headers parsed correctly
-	* gopher++ works ok with a patched NSCA Mosaic!
-	* ISO-8859-1 (Latin-1) output
-	* Full UTF-8 output support (without widechars)
-	* Gophermaps are converted to output charset
-	* All type 0 output is converted to output charset
-	* All charset conversions can be disabled with option -no
-	* !Titles in gophermaps are converted to gopher menu titles
-	* Automatically generates gopher title resources for menus
-	* Compile-time option to strictly adhere to RFC 1436
-	* Compile-time option to disable all gopher++ support
-
-
-2010-03-29  Kim Holviala  <kim@holviala.com>
-
-	* Released version 0.4
-	* Renamed the project to "Gophernicus Server"
-	* Major rewrite with much cleaner code
-	* Changed all strncpy's to the OpenBSD strlcpy
-	* Server can guess the request type (menu/text/binary)
-	* Errors are formatted for current filetype (menu/text)
-	* Errors for images (types g&I) are outputted as an image
-	* /~luser (/home/luser/public_gopher) must be owned by luser
-	* Configurable output width for menus
-	* Files are outputted using sendfile() if available
-	* Locale forced to POSIX for strftime()
-	* Filetype '-' in gophermaps hides files
-	* Gopher+ requests are now handled gracefully
-	* Relative selectors in gophemaps work
-	* Filesizes in menus are now human-readable (KB/MB/GB etc)
-	* Refuse to serve world-writeable content
-	* Support for Apache-style /server-status
-	* HTTP requests for /server-status work (munin monitoring ftw!)
-	* Session tracking using shared memory
-	* Referer support for CGIs
-	* Replaced iconv() with own charset conversion routine
-	* Automatic throttling for users who hit the server too much
-	* Replaced static compile-time uname with uname()
-	* Support for virtual hosting (with gopher0 no less!)
-
-
-2010-01-07  Kim Holviala  <kim@holviala.com>
-
-	* Released version 0.3
-        * Automatic detection of text vs. binary filetype for files
-	  which have no (known) suffix
-	* hURL redirect pages now respect -f (no footer) option
-	* IPv6 support for logging & CGI REMOTE_ADDR
-	* Inline gophermaps
-	* Removed support for relative resource names in gophermaps
-	* Support for virtual userdirs (~user -> /home/user/public_gopher)
-	* Automatic listing of userdirs in gophermap
-	* Redirect accidental http requests to gopher
-	* License included in the binary -> install no longer installs docs
-	* Changed command line options (I was running out of arg letters...)
-	* Debug to syslog with '-d' option
-
-
-2010-01-02  Kim Holviala  <kim@holviala.com>
-
-	* Released version 0.2
-	* Logging to syslog
-	* Support for gophermaps
-	* Support for executable gophermaps
-	* Support for CGI scripts
-	* Support for type 7 search queries
-	* Support for hURL redirect pages
-	* Support for non-ASCII resource/file names (tested with UTF-8)
-	* Support for both %hex and #octal request encodings
-	* Try to get server hostname from $HOSTNAME or gethostname()
-	* Basic support for different platforms via HAVE_XX defines
-
-
-2009-12-30  Kim Holviala  <kim@holviala.com>
-
-	* Released version 0.1
-	* Basic rfc1436 functionality works
-	* Fancy menus with file dates & sizes
-	* Options via command line (with sensible defaults)
-
-
-2009-12-28  Kim Holviala  <kim@holviala.com>
-
-	* Started coding kgopherd
-	* Trying to remember how "C" works...
-
diff -Naur --exclude .git gophernicus-2.5/client.sh gophernicus-CGX/client.sh
--- gophernicus-2.5/client.sh	Thu Jan  1 01:00:00 1970
+++ gophernicus-CGX/client.sh	Tue Nov 20 00:52:11 2018
@@ -0,0 +1,4 @@
+#!/bin/sh
+### openssl s_client -connect localhost:343 -tls1_2
+socat TCP4-LISTEN:$1 openssl-connect:localhost:343,cafile=/etc/ssl/cert.pem,method=TLS1.2,verify=0,reuseaddr &
+gopher gopher://localhost:$1
diff -Naur --exclude .git gophernicus-2.5/debian/changelog gophernicus-CGX/debian/changelog
--- gophernicus-2.5/debian/changelog	Sat Jun 24 16:55:13 2017
+++ gophernicus-CGX/debian/changelog	Mon Nov 19 14:13:04 2018
@@ -1,51 +1,3 @@
-gophernicus (2.5) unstable; urgency=low
-
-  * New upstream release
-
- -- Kim Holviala <kim@holviala.com>  Sat, 24 Jun 2017 18:55:08 +0200
-
-gophernicus (2.4) unstable; urgency=low
-
-  * New upstream release
-
- -- Kim Holviala <kim@holviala.com>  Sat, 04 Feb 2017 10:51:28 +0200
-
-gophernicus (2.3) unstable; urgency=low
-
-  * New upstream release
-
- -- Kim Holviala <kim@holviala.com>  Fri, 03 Feb 2017 22:54:11 +0200
-
-gophernicus (2.2) unstable; urgency=low
-
-  * New upstream release
-
- -- Kim Holviala <kim@holviala.com>  Sun, 11 Dec 2016 11:02:34 +0200
-
-gophernicus (2.1) unstable; urgency=low
-
-  * New upstream release
-
- -- Kim Holviala <kim@holviala.com>  Sun, 13 Nov 2016 11:11:11 +0200
-
-gophernicus (1.8.1) unstable; urgency=low
-
-  * New upstream release
-
- -- Kim Holviala <kim@holviala.com>  Fri, 16 Oct 2015 13:18:01 +0200
-
-gophernicus (1.8) unstable; urgency=low
-
-  * New upstream release
-
- -- Kim Holviala <kim@holviala.com>  Wed, 23 Sep 2015 19:03:28 +0200
-
-gophernicus (1.7) unstable; urgency=low
-
-  * New upstream release
-
- -- Kim Holviala <kim@holviala.com>  Mon, 02 Mar 2015 08:52:00 +0200
-
 gophernicus (1.6) unstable; urgency=low
 
   * New upstream release
diff -Naur --exclude .git gophernicus-2.5/debian/control gophernicus-CGX/debian/control
--- gophernicus-2.5/debian/control	Thu Feb  2 10:51:33 2017
+++ gophernicus-CGX/debian/control	Mon Nov 19 14:13:04 2018
@@ -2,15 +2,15 @@
 Section: net
 Priority: extra
 Maintainer: Kim Holviala <kim@holviala.com>
-Build-Depends: debhelper (>= 5), libwrap0-dev
+Build-Depends: debhelper (>= 5)
 Standards-Version: 3.7.3
 Homepage: gopher://gophernicus.org/1/software/gophernicus/server/
 
 Package: gophernicus
 Architecture: any
-Depends: ${shlibs:Depends}, debconf, netbase, libwrap0, openbsd-inetd | inet-superserver | systemd
+Depends: ${shlibs:Depends}, debconf, netbase, openbsd-inetd | inet-superserver
 Recommends: lsb-release
-Suggests: php5-cli
-Description: Modern full-featured gopher server
+Suggests: lynx, php5-cli
+Description: Modern full-featured gopher server for inetd
  Gophernicus is a modern full-featured (and hopefully) secure
- gopher daemon.
+ gopher daemon for inetd.
diff -Naur --exclude .git gophernicus-2.5/debian/copyright gophernicus-CGX/debian/copyright
--- gophernicus-2.5/debian/copyright	Wed Feb  1 08:36:43 2017
+++ gophernicus-CGX/debian/copyright	Mon Nov 19 14:13:04 2018
@@ -1,4 +1,4 @@
-Gophernicus - Copyright (c) 2009-2017 Kim Holviala <kim@holviala.com>
+Gophernicus - Copyright (c) 2009-2014 Kim Holviala <kim@holviala.com>
 All rights reserved.
 
 Redistribution and use in source and binary forms, with or without
diff -Naur --exclude .git gophernicus-2.5/debian/dirs gophernicus-CGX/debian/dirs
--- gophernicus-2.5/debian/dirs	Sun Nov 13 13:46:34 2016
+++ gophernicus-CGX/debian/dirs	Mon Nov 19 14:13:04 2018
@@ -2,4 +2,3 @@
 var/gopher
 var/log/gophernicus
 usr/lib/gophernicus/filters
-lib/systemd/system
diff -Naur --exclude .git gophernicus-2.5/debian/gophernicus.config gophernicus-CGX/debian/gophernicus.config
--- gophernicus-2.5/debian/gophernicus.config	Sun Nov 13 13:46:34 2016
+++ gophernicus-CGX/debian/gophernicus.config	Mon Nov 19 14:13:04 2018
@@ -8,7 +8,7 @@
 db_go
 
 # Clear old config on reconfigure
-if [ "$1" = "reconfigure" -a -x /usr/sbin/update-inetd ]; then
-	/usr/sbin/update-inetd --remove "#<off># gopher"
+if [ "$1" = "reconfigure" ]; then
+	update-inetd --remove "#<off># gopher"
 fi
 
diff -Naur --exclude .git gophernicus-2.5/debian/gophernicus.default gophernicus-CGX/debian/gophernicus.default
--- gophernicus-2.5/debian/gophernicus.default	Thu Feb  2 10:39:50 2017
+++ gophernicus-CGX/debian/gophernicus.default	Thu Jan  1 01:00:00 1970
@@ -1,13 +0,0 @@
-# Options for Gophernicus for use with systemd
-#
-# If you are using Gophernicus with inetd this configuration file
-# is ignored and the real configuration is in /etc/inetd.conf
-#
-# See README or run "in.gophernicus -?" to see a full list of
-# configuration options.
-#
-# Example:
-# OPTIONS="-h full.hostname -D \"I find your lack of gopher disturbing.\""
-#
-# Add your options here:
-OPTIONS="-h __HOSTNAME__ -l __LOGDIR__/server.log -f /usr/lib/__PACKAGE__/filters"
diff -Naur --exclude .git gophernicus-2.5/debian/gophernicus.logcheck.ignore.server gophernicus-CGX/debian/gophernicus.logcheck.ignore.server
--- gophernicus-2.5/debian/gophernicus.logcheck.ignore.server	Sun Nov 13 08:26:28 2016
+++ gophernicus-CGX/debian/gophernicus.logcheck.ignore.server	Mon Nov 19 14:13:04 2018
@@ -1,4 +1,3 @@
 ^\w{3} [ :0-9]{11} [._[:alnum:]-]+ in.gophernicus\[[0-9]+\]: request for "[^"]*" from [._[:alnum:]:-]+$
 ^\w{3} [ :0-9]{11} [._[:alnum:]-]+ in.gophernicus\[[0-9]+\]: error "No such file or directory" for request "[^"]*" from [._[:alnum:]:-]+$
 ^\w{3} [ :0-9]{11} [._[:alnum:]-]+ in.gophernicus\[[0-9]+\]: error "User not found" for request "/~[^"]*" from [._[:alnum:]:-]+$
-^\w{3} [ :0-9]{11} [._[:alnum:]-]+ systemd\[1\]: Start(ing|ed) Gophernicus gopher server \([^[:space:]]+\)\.+$
diff -Naur --exclude .git gophernicus-2.5/debian/postinst gophernicus-CGX/debian/postinst
--- gophernicus-2.5/debian/postinst	Thu Feb  2 10:43:42 2017
+++ gophernicus-CGX/debian/postinst	Mon Nov 19 14:13:04 2018
@@ -12,7 +12,6 @@
 LOGDIR=/var/log/$PACKAGE
 LIBDIR=/usr/lib/$PACKAGE
 BINARY=in.gophernicus
-DEFAULT=/etc/default/$PACKAGE
 USER=nobody
 
 # Get hostname from debconf
@@ -21,6 +20,9 @@
 	HOSTNAME="`echo $RET | tr -cd 'A-Za-z0-9.-'`"
 fi
 
+# Generate inetd service
+SERVICE="gopher\t\tstream\ttcp\tnowait\t$USER\t/usr/sbin/$BINARY\t$BINARY -h $HOSTNAME -l $LOGDIR/server.log -f /usr/lib/$PACKAGE/filters"
+
 # Configure gophernicus
 if [ "$1" = "configure" ]; then
 	if [ ! -f "$ROOT/gophermap" ]; then
@@ -30,17 +32,6 @@
 	chown $USER.adm $LOGDIR
 	chmod 0750 $LOGDIR
 
-	sed -i -e "s|-h [^ ]* |-h $HOSTNAME |" $DEFAULT
-	sed -i -e "s|__PACKAGE__|$PACKAGE|g" $DEFAULT
-	sed -i -e "s|__LOGDIR__|$LOGDIR|g" $DEFAULT
-
-	if [ -x /usr/bin/deb-systemd-helper -a -d /run/systemd/system ]; then
-		/usr/bin/deb-systemd-helper enable gophernicus.socket
-		/usr/bin/deb-systemd-invoke start gophernicus.socket
-	else
-		if [ -f /etc/inetd.conf -a -x /usr/sbin/update-inetd ]; then
-			/usr/sbin/update-inetd --add "gopher\t\tstream\ttcp\tnowait\t$USER\t/usr/sbin/$BINARY\t$BINARY -h $HOSTNAME -l $LOGDIR/server.log -f /usr/lib/$PACKAGE/filters"
-		fi
-	fi
+	update-inetd --add "$SERVICE"
 fi
 
diff -Naur --exclude .git gophernicus-2.5/debian/postrm gophernicus-CGX/debian/postrm
--- gophernicus-2.5/debian/postrm	Sun Nov 13 13:46:34 2016
+++ gophernicus-CGX/debian/postrm	Mon Nov 19 14:13:04 2018
@@ -1,11 +1,8 @@
 #!/bin/sh
 
-if [ "$1" = "purge" -a -f /etc/inetd.conf -a -x /usr/sbin/update-inetd ]; then
-	/usr/sbin/update-inetd --remove "#<off># gopher"
+if [ "$1" = "purge" ]; then
+	update-inetd --remove "#<off># gopher"
 fi
 
-if [ -d /run/systemd/system ]; then
-	systemctl --system daemon-reload >/dev/null || true
-fi
-
 #DEBHELPER#
+
diff -Naur --exclude .git gophernicus-2.5/debian/prerm gophernicus-CGX/debian/prerm
--- gophernicus-2.5/debian/prerm	Sun Nov 13 13:46:34 2016
+++ gophernicus-CGX/debian/prerm	Mon Nov 19 14:13:04 2018
@@ -1,12 +1,6 @@
 #!/bin/sh
 
-if [ -f /etc/inetd.conf -a -x /usr/sbin/update-inetd ]; then
-	/usr/sbin/update-inetd --disable gopher 
-fi
-
-if [ -x /usr/bin/deb-systemd-helper ]; then
-	/usr/bin/deb-systemd-helper disable gophernicus.socket >/dev/null
-fi
+update-inetd --disable gopher
 
 #DEBHELPER#
 
diff -Naur --exclude .git gophernicus-2.5/debian/rules gophernicus-CGX/debian/rules
--- gophernicus-2.5/debian/rules	Fri Jun 16 08:00:48 2017
+++ gophernicus-CGX/debian/rules	Mon Nov 19 14:13:04 2018
@@ -20,7 +20,6 @@
 	dh_testdir
 
 	$(MAKE)
-	$(MAKE) ChangeLog
 
 	touch $@
 
@@ -44,8 +43,7 @@
 	rm -rf $(DEST)/tmp
 	ln -s /usr/share/doc/gophernicus/ $(DEST)/var/gopher/docs
 	ln -s /usr/bin/php5 $(DEST)/usr/lib/gophernicus/filters/php
-	cp $(CURDIR)/gophermap $(DEST)/usr/lib/gophernicus/
-	cp $(CURDIR)/gophernicus.socket $(CURDIR)/gophernicus@.service $(DEST)/lib/systemd/system/
+	cp gophermap $(DEST)/usr/lib/gophernicus/
 
 # Build architecture-independent files here.
 binary-indep: build install
@@ -67,7 +65,7 @@
 #	dh_installpam
 #	dh_installmime
 #	dh_python
-	dh_installinit
+#	dh_installinit
 #	dh_installcron
 #	dh_installinfo
 #	dh_installman
diff -Naur --exclude .git gophernicus-2.5/examples/counter/counter.sh gophernicus-CGX/examples/counter/counter.sh
--- gophernicus-2.5/examples/counter/counter.sh	Tue Dec 29 10:13:00 2015
+++ gophernicus-CGX/examples/counter/counter.sh	Mon Nov 19 14:13:04 2018
@@ -11,7 +11,11 @@
 FILE=/var/tmp/gopher-counter-$HASH
 
 # Get count and the previous visitors IP address
-COUNT="`cut -d' ' -f1 $FILE`"
+if [ -f $FILE ]; then
+	COUNT="`cut -d' ' -f1 $FILE`"
+else
+	COUNT="1"
+fi
 OLD_ADDR="`cut -d' ' -f2 $FILE`"
 
 # Increase counter only if the user is new
diff -Naur --exclude .git gophernicus-2.5/file.c gophernicus-CGX/file.c
--- gophernicus-2.5/file.c	Sat Jun 24 12:52:41 2017
+++ gophernicus-CGX/file.c	Tue Nov 20 01:09:00 2018
@@ -1,5 +1,5 @@
 /*
- * Gophernicus - Copyright (c) 2009-2017 Kim Holviala <kim@holviala.com>
+ * Gophernicus - Copyright (c) 2009-2014 Kim Holviala <kim@holviala.com>
  * All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
@@ -66,6 +66,7 @@
 	FILE *fp;
 	char in[BUFSIZE];
 	char out[BUFSIZE];
+	char wbuf[BUFSIZE];
 	int line;
 
 	if (st->debug) syslog(LOG_INFO, "outputting text file \"%s\"", st->req_realpath);
@@ -83,15 +84,31 @@
 		chomp(out);
 
 #ifdef ENABLE_STRICT_RFC1436
-		if (strcmp(out, ".") == MATCH) printf(".." CRLF);
-		else
+		if (strcmp(out, ".") == MATCH) {
+			if (st->server_tls == 1) {
+				snprintf(wbuf, BUFSIZE, ".." CRLF);
+				tlsprint(st, wbuf);
+			} else {
+				printf(".." CRLF);
+			}
+		}
 #endif
-		printf("%s" CRLF, out);
+		if (st->server_tls == 1) {
+			snprintf(wbuf, BUFSIZE, "%s" CRLF, out);
+			tlsprint(st, wbuf);
+		} else {
+			printf("%s" CRLF, out);
+		}
 		line++;
 	}
 
 #ifdef ENABLE_STRICT_RFC1436
-	printf("." CRLF);
+	if (st->server_tls == 1) {
+		snprintf(wbuf, BUFSIZE, "." CRLF);
+		tlsprint(st, wbuf);
+	} else {
+		printf("." CRLF);
+	}
 #endif
 	fclose(fp);
 }
@@ -103,13 +120,14 @@
 void url_redirect(state *st)
 {
 	char dest[BUFSIZE];
+	char wbuf[BUFSIZE];
 	char *c;
-
+	ssize_t w = 0;
+	ssize_t wr = 0;
 	/* Basic security checking */
 	sstrlcpy(dest, st->req_selector + 4);
 
 	if (sstrncmp(dest, "http://") != MATCH &&
-	    sstrncmp(dest, "https://") != MATCH &&
 	    sstrncmp(dest, "ftp://") != MATCH &&
 	    sstrncmp(dest, "mailto:") != MATCH)
 		die(st, ERR_ACCESS, "Refusing to HTTP redirect unsafe protocols");
@@ -119,8 +137,7 @@
 
 	/* Log the redirect */
 	if (st->opt_syslog) {
-		syslog(LOG_INFO, "request for \"gopher%s://%s:%i/h%s\" from %s",
-			(st->server_port == st->server_tls_port ? "s" : ""),
+		syslog(LOG_INFO, "request for \"gopher://%s:%i/h%s\" from %s",
 			st->server_host,
 			st->server_port,
 			st->req_selector,
@@ -129,6 +146,25 @@
 	log_combined(st, HTTP_OK);
 
 	/* Output HTML */
+	syslog(LOG_INFO, "OUTPUT HTML\n");
+	if (st->server_tls == 1){
+		snprintf(wbuf, BUFSIZE, 
+			"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\n"
+			"<HTML>\n<HEAD>\n"
+			 "  <META HTTP-EQUIV=\"Refresh\" content=\"1;URL=%1$s\">\n"
+			"  <META HTTP-EQUIV=\"Content-Type\" CONTENT=\"text/html;charset=iso-8859-1\">\n"
+			"  <TITLE>URL Redirect page</TITLE>\n"
+			"</HEAD>\n<BODY>\n"
+			"<STRONG>Redirecting to <A HREF=\"%1$s\">%1$s</A></STRONG>\n"
+			"<PRE>\n", dest);
+		tlsprint(st, wbuf);
+		footer(st);
+		snprintf(wbuf, BUFSIZE, "</PRE>\n</BODY>\n</HTML>\n");
+		tlsprint(st, wbuf);
+
+/*		if (st->opt_syslog) */
+			syslog(LOG_INFO, "Wrote %zd bytes: %s\n", w, wbuf);
+	}else{
 	printf("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\n"
 		"<HTML>\n<HEAD>\n"
 		"  <META HTTP-EQUIV=\"Refresh\" content=\"1;URL=%1$s\">\n"
@@ -139,6 +175,7 @@
 		"<PRE>\n", dest);
 	footer(st);
 	printf("</PRE>\n</BODY>\n</HTML>\n");
+	}
 }
 
 
@@ -153,11 +190,11 @@
 	time_t uptime;
 	int sessions;
 	int i;
+	char wbuf[BUFSIZE];
 
 	/* Log the request */
 	if (st->opt_syslog) {
-		syslog(LOG_INFO, "request for \"gopher%s://%s:%i/0" SERVER_STATUS "\" from %s",
-			(st->server_port == st->server_tls_port ? "s" : ""),
+		syslog(LOG_INFO, "request for \"gopher://%s:%i/0" SERVER_STATUS "\" from %s",
 			st->server_host,
 			st->server_port,
 			st->req_remote_addr);
@@ -179,6 +216,27 @@
 	shmctl(shmid, IPC_STAT, &shm_ds);
 
 	/* Print statistics */
+	
+	if(st->server_tls) {
+		snprintf(wbuf, BUFSIZE, "Total Accesses: %li" CRLF
+                "Total kBytes: %li" CRLF
+                "Uptime: %i" CRLF
+                "ReqPerSec: %.3f" CRLF
+                "BytesPerSec: %li" CRLF
+                "BytesPerReq: %li" CRLF
+                "BusyServers: %i" CRLF
+                "IdleServers: 0" CRLF
+                "CPULoad: %.2f" CRLF,
+                        shm->hits,
+                        shm->kbytes,
+                        (int) uptime,
+                        (float) shm->hits / (float) uptime,
+                        shm->kbytes * 1024 / (int) uptime,
+		(int) shm_ds.shm_nattch,
+		loadavg());
+
+		tlsprint(st, wbuf);
+	} else {
 	printf("Total Accesses: %li" CRLF
 		"Total kBytes: %li" CRLF
 		"Uptime: %i" CRLF
@@ -196,6 +254,7 @@
 			shm->kbytes * 1024 / (shm->hits + 1),
 			(int) shm_ds.shm_nattch,
 			loadavg());
+	}
 
 	/* Print active sessions */
 	sessions = 0;
@@ -203,17 +262,30 @@
 	for (i = 0; i < SHM_SESSIONS; i++) {
 		if ((now - shm->session[i].req_atime) < st->session_timeout) {
 			sessions++;
-
-			printf("Session: %-4i %-40s %-4li %-7li gopher%s://%s:%i/%c%s" CRLF,
+			
+			if(st->server_tls) {
+				snprintf(wbuf, BUFSIZE,
+					"Session: %-4i %-40s %-4li %-7li gopher://%s:%i/%c%s" CRLF,
+					(int) (now - shm->session[i].req_atime),
+                                shm->session[i].req_remote_addr,
+                                shm->session[i].hits,
+                                shm->session[i].kbytes,
+                                shm->session[i].server_host,
+                                shm->session[i].server_port,
+                                shm->session[i].req_filetype,
+                                shm->session[i].req_selector);
+				tlsprint(st, wbuf);	
+			} else {
+			printf("Session: %-4i %-40s %-4li %-7li gopher://%s:%i/%c%s" CRLF,
 				(int) (now - shm->session[i].req_atime),
 				shm->session[i].req_remote_addr,
 				shm->session[i].hits,
 				shm->session[i].kbytes,
-				(shm->session[i].server_port == st->server_tls_port ? "s" : ""),
 				shm->session[i].server_host,
 				shm->session[i].server_port,
 				shm->session[i].req_filetype,
 				shm->session[i].req_selector);
+			}
 		}
 	}
 
@@ -229,8 +301,7 @@
 {
 	/* Log the request */
 	if (st->opt_syslog) {
-		syslog(LOG_INFO, "request for \"gopher%s://%s:%i/0" CAPS_TXT "\" from %s",
-			(st->server_port == st->server_tls_port ? "s" : ""),
+		syslog(LOG_INFO, "request for \"gopher://%s:%i/0" CAPS_TXT "\" from %s",
 			st->server_host,
 			st->server_port,
 			st->req_remote_addr);
@@ -264,16 +335,11 @@
 		"PathParent=.." CRLF
 		"PathParentDouble=FALSE" CRLF
 		"PathKeepPreDelimeter=FALSE" CRLF
-		"ServerSupportsStdinScripts=TRUE" CRLF
-		"ServerDefaultEncoding=%s" CRLF
-		"ServerTLSPort=%i" CRLF
 		CRLF
 		"ServerSoftware=" SERVER_SOFTWARE CRLF
-		"ServerSoftwareVersion=" VERSION " \"" CODENAME "\"" CRLF
+		"ServerSoftwareVersion=" VERSION CRLF
 		"ServerArchitecture=%s" CRLF,
 			st->session_timeout,
-			strcharset(st->out_charset),
-			st->server_tls_port,
 			st->server_platform);
 
 	/* Optional keys */
@@ -312,16 +378,9 @@
 	else
 		setenv("SERVER_PROTOCOL", "RFC1436", 1);
 
-	if (st->server_port == st->server_tls_port) {
-		setenv("HTTPS", "on", 1);
-		setenv("TLS", "on", 1);
-	}
-
 	setenv("SERVER_NAME", st->server_host, 1);
 	snprintf(buf, sizeof(buf), "%i", st->server_port);
 	setenv("SERVER_PORT", buf, 1);
-	snprintf(buf, sizeof(buf), "%i", st->server_tls_port);
-	setenv("SERVER_TLS_PORT", buf, 1);
 	setenv("REQUEST_METHOD", "GET", 1);
 	setenv("DOCUMENT_ROOT", st->server_root, 1);
 	setenv("SCRIPT_NAME", st->req_selector, 1);
@@ -329,10 +388,6 @@
 	setenv("LOCAL_ADDR", st->req_local_addr, 1);
 	setenv("REMOTE_ADDR", st->req_remote_addr, 1);
 	setenv("HTTP_REFERER", st->req_referrer, 1);
-#ifdef HAVE_SHMEM
-	snprintf(buf, sizeof(buf), "%x", st->session_id);
-	setenv("SESSION_ID", buf, 1);
-#endif
 	setenv("HTTP_ACCEPT_CHARSET", strcharset(st->out_charset), 1);
 
 	/* Gophernicus extras */
@@ -342,8 +397,6 @@
 	setenv("GOPHER_REFERER", st->req_referrer, 1);
 	snprintf(buf, sizeof(buf), "%i", st->out_width);
 	setenv("COLUMNS", buf, 1);
-	snprintf(buf, sizeof(buf), CODENAME);
-	setenv("SERVER_CODENAME", buf, 1);
 
 	/* Bucktooth extras */
 	if (*st->req_query_string) {
@@ -355,7 +408,7 @@
 
 	setenv("SERVER_HOST", st->server_host, 1);
 	setenv("REQUEST", st->req_selector, 1);
-	setenv("SEARCHREQUEST", st->req_search, 1);
+	setenv("SEARCHREQUEST", st->req_query_string, 1);
 }
 
 
diff -Naur --exclude .git gophernicus-2.5/functions.h gophernicus-CGX/functions.h
--- gophernicus-2.5/functions.h	Sat Jun 24 23:02:56 2017
+++ gophernicus-CGX/functions.h	Thu Jan  1 01:00:00 1970
@@ -1,45 +0,0 @@
-/* Automatically generated function definitions */
-
-void info(state *st, char *str, char type);
-void footer(state *st);
-void die(state *st, char *message, char *description);
-void log_combined(state *st, int status);
-void selector_to_path(state *st);
-char *get_local_address(void);
-char *get_peer_address(void);
-void init_state(state *st);
-void send_binary_file(state *st);
-void send_text_file(state *st);
-void url_redirect(state *st);
-void server_status(state *st, shm_state *shm, int shmid);
-void caps_txt(state *st, shm_state *shm);
-void setenv_cgi(state *st, char *script);
-void run_cgi(state *st, char *script, char *arg);
-void gopher_file(state *st);
-int foldersort(const void *a, const void *b);
-int sortdir(char *path, sdirent *list, int max);
-void userlist(state *st);
-void vhostlist(state *st);
-char gopher_filetype(state *st, char *file, char magic);
-int gophermap(state *st, char *mapfile, int depth);
-void gopher_menu(state *st);
-void ucfirst(char *str);
-void strrepeat(char *dest, char c, size_t num);
-void strreplace(char *str, char from, char to);
-size_t strcut(char *str, size_t width);
-char *strkey(char *header, char *key);
-char strlast(char *str);
-void chomp(char *str);
-char *strcharset(int charset);
-void strniconv(int charset, char *out, char *in, size_t outsize);
-void strnencode(char *out, const char *in, size_t outsize);
-void strndecode(char *out, char *in, size_t outsize);
-void strfsize(char *out, off_t size, size_t outsize);
-void platform(state *st);
-float loadavg(void);
-int get_shm_session_id(state *st, shm_state *shm);
-void get_shm_session(state *st, shm_state *shm);
-void update_shm_session(state *st, shm_state *shm);
-void add_ftype_mapping(state *st, char *suffix);
-void add_rewrite_mapping(state *st, char *match);
-void parse_args(state *st, int argc, char *argv[]);
diff -Naur --exclude .git gophernicus-2.5/git2changelog gophernicus-CGX/git2changelog
--- gophernicus-2.5/git2changelog	Sun Dec 11 08:58:40 2016
+++ gophernicus-CGX/git2changelog	Mon Nov 19 14:13:04 2018
@@ -5,14 +5,14 @@
 ##
 
 PREVIOUS=
-IFS=\;
+IFS=/
 
 echo "[ Automatically generated from git log ]"
 
-git log --pretty=tformat:"%ad  %an  <%ae>;%s" --date=short | \
-while read -r AUTHOR COMMENT; do
+git log --pretty=tformat:"%ad  %an  <%ae>/%s" --date=short | \
+while read AUTHOR COMMENT; do
 	[ "$AUTHOR" != "$PREVIOUS" ] && printf "\n$AUTHOR\n\n"
-	printf "\t* %s\n" "$COMMENT"
+	printf "\t* $COMMENT\n"
 	PREVIOUS="$AUTHOR"
 done
 
diff -Naur --exclude .git gophernicus-2.5/gophermap gophernicus-CGX/gophermap
--- gophernicus-2.5/gophermap	Fri Jan  1 08:26:57 2016
+++ gophernicus-CGX/gophermap	Mon Nov 19 14:13:04 2018
@@ -18,15 +18,15 @@
 # Real-time configuration output (WOO!)
 #
 Generic information:
+=echo "    current time...: `date`"
 =echo "    your ip address: $REMOTE_ADDR"
-=echo "    server time....: `date`"
-=echo "    server uptime..: `uptime | sed 's/.*up *\([^,]*\), .*/\1/'`"
-=echo "    server version.: $SERVER_VERSION \"$SERVER_CODENAME\""
+=echo "    server uptime..: `uptime | sed 's/.*up \([^,]*\), .*/\1/' `"
+=echo "    server version.: $SERVER_VERSION"
 =echo "    server platform: $SERVER_ARCH"
 =echo "    description....: $SERVER_DESCRIPTION"
 
 Server configuration:
-=echo "    config file....: `for FILE in /etc/sysconfig/gophernicus /etc/default/gophernicus /Library/LaunchDaemons/org.gophernicus.server.plist /boot/common/settings/network/services /lib/systemd/system/gophernicus\@.service /etc/xinetd.d/gophernicus /etc/inetd.conf; do if [ -f $FILE ]; then echo $FILE; break; fi; done`"
+=echo "    config file....: `for FILE in /Library/LaunchDaemons/org.gophernicus.server.plist /boot/common/settings/network/services /etc/xinetd.d/gophernicus /etc/inetd.conf; do if [ -f $FILE ]; then echo $FILE; break; fi; done`"
 =echo "    server hostname: $SERVER_HOST"
 =echo "    root directory.: $DOCUMENT_ROOT"
 =echo "    running as user: `whoami`"
diff -Naur --exclude .git gophernicus-2.5/gophernicus.c gophernicus-CGX/gophernicus.c
--- gophernicus-2.5/gophernicus.c	Sat Jun 24 16:49:48 2017
+++ gophernicus-CGX/gophernicus.c	Tue Nov 20 00:37:01 2018
@@ -1,5 +1,5 @@
 /*
- * Gophernicus - Copyright (c) 2009-2017 Kim Holviala <kim@holviala.com>
+ * Gophernicus - Copyright (c) 2009-2014 Kim Holviala <kim@holviala.com>
  * All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
@@ -33,6 +33,7 @@
 {
 	char buf[BUFSIZE];
 	char selector[16];
+	char wbuf[BUFSIZE];
 
 	/* Convert string to output charset */
 	if (st->opt_iconv) sstrniconv(st->out_charset, buf, str);
@@ -47,8 +48,14 @@
 
 	/* Output info line */
 	strcut(buf, st->out_width);
+	if (st->server_tls == 1){
+		snprintf(wbuf, BUFSIZE, "%c%s\t%s\t%s" CRLF,
+				type, buf, selector, DUMMY_HOST);
+		tlsprint(st, wbuf);
+	}else{
 	printf("%c%s\t%s\t%s" CRLF,
 		type, buf, selector, DUMMY_HOST);
+	}
 }
 
 
@@ -60,12 +67,20 @@
 	char line[BUFSIZE];
 	char buf[BUFSIZE];
 	char msg[BUFSIZE];
+	char wbuf[BUFSIZE];
+	ssize_t w = 0;
+	ssize_t wr = 0;
 
 	if (!st->opt_footer) {
 #ifndef ENABLE_STRICT_RFC1436
 		if (st->req_filetype == TYPE_MENU || st->req_filetype == TYPE_QUERY)
 #endif
+		if (st->server_tls ==1){
+			snprintf(wbuf, BUFSIZE, "." CRLF);
+			tlsprint(st, wbuf);
+		}else{	
 			printf("." CRLF);
+		}
 		return;
 	}
 
@@ -80,19 +95,50 @@
 	if (st->req_filetype == TYPE_MENU || st->req_filetype == TYPE_QUERY) {
 		info(st, line, TYPE_INFO);
 		info(st, msg, TYPE_INFO);
+		if (st->server_tls == 1) {
+			w = 0; 
+			wr = 0; 
+			/* wbuf = ""; */
+			snprintf(wbuf, BUFSIZE, "." CRLF);
+			tlsprint(st, wbuf);
+		/* syslog(LOG_INFO, "footer()[2]: %zd written", w); */
+		}else{
 		printf("." CRLF);
+		}
 	}
 
 	/* Plain text footer */
 	else {
+		if (st->server_tls == 1) {
+			w = 0; wr = 0; 
+			/* wbuf = NULL; */
+			snprintf(wbuf, BUFSIZE, "%s" CRLF, line);
+			tlsprint(st, wbuf);
+			snprintf(wbuf, BUFSIZE, "%s" CRLF, msg);
+			tlsprint(st, wbuf);
+		#ifdef ENABLE_STRICT_RFC1436
+			snprintf(wbuf, BUFSIZE, "." CRLF);
+			tlsprint(st, wbuf);
+		#endif
+		}else {
 		printf("%s" CRLF, line);
 		printf("%s" CRLF, msg);
 #ifdef ENABLE_STRICT_RFC1436
 		printf("." CRLF);
 #endif
+		}
 	}
 }
 
+void tlsprint(state *st, char *str)
+{
+	char wbuf[BUFSIZE];
+	ssize_t w = 0;
+	ssize_t wr = 0;
+	snprintf(wbuf, BUFSIZE, str);
+	w = tls_write(st->tls_cctx, wbuf + wr, strlen(wbuf) - wr);
+	syslog(LOG_INFO, "tlsprint: %zd written", w);
+}
 
 /*
  * Print error message & exit
@@ -101,6 +147,9 @@
 {
 	int en = errno;
 	static const char error_gif[] = ERROR_GIF;
+	ssize_t w = 0;
+	ssize_t wr = 0;
+	char wbuf[BUFSIZE];
 
 	/* Handle NULL description */
 	if (description == NULL) description = strerror(en);
@@ -114,7 +163,14 @@
 
 	/* Handle menu errors */
 	if (st->req_filetype == TYPE_MENU || st->req_filetype == TYPE_QUERY) {
+		if (st->server_tls == 1){
+			snprintf(wbuf, BUFSIZE, "3" ERROR_PREFIX "%s\tTITLE\t"
+					DUMMY_HOST CRLF, message);
+			w = tls_write(st->tls_cctx, wbuf + wr, strlen(wbuf) - 
+					wr);
+		}else{
 		printf("3" ERROR_PREFIX "%s\tTITLE\t" DUMMY_HOST CRLF, message);
+		}
 		footer(st);
 	}
 
@@ -125,6 +181,17 @@
 
 	/* Handle HTML errors */
 	else if (st->req_filetype == TYPE_HTML) {
+		if (st->server_tls == 1){
+			snprintf(wbuf, BUFSIZE, "<HTML><HEAD><TITLE>"
+				ERROR_PREFIX "%1$s</TITLE>\n"
+				"</HEAD>\n<BODY>\n"
+				"<STRONG>" ERROR_PREFIX "%1$s</STRONG>\n"
+				"<PRE>\n", message);
+			w = tls_write(st->tls_cctx, wbuf + wr, strlen(wbuf) - wr);
+			footer(st);
+			snprintf(wbuf, BUFSIZE, "</pre>\n</BODY>\n</HTML>\n");
+			w = tls_write(st->tls_cctx, wbuf + wr, strlen(wbuf) - wr);
+		}else{
 		printf("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\n"
 			"<HTML>\n<HEAD>\n"
 			"  <META HTTP-EQUIV=\"Content-Type\" CONTENT=\"text/html;charset=iso-8859-1\">\n"
@@ -134,6 +201,7 @@
 			"<PRE>\n", message);
 		footer(st);
 		printf("</PRE>\n</BODY>\n</HTML>\n");
+		}
 	}
 
 	/* Use plain text error for other filetypes */
@@ -329,7 +397,7 @@
 #endif
 
 	/* Nothing works... I'm out of ideas */
-	return UNKNOWN_ADDR;
+	return DEFAULT_ADDR;
 }
 
 
@@ -374,10 +442,9 @@
 #endif
 
 	/* Nothing works... I'm out of ideas */
-	return UNKNOWN_ADDR;
+	return DEFAULT_ADDR;
 }
 
-
 /*
  * Initialize state struct to default/empty values
  */
@@ -392,7 +459,6 @@
 	strclear(st->req_selector);
 	strclear(st->req_realpath);
 	strclear(st->req_query_string);
-	strclear(st->req_search);
 	strclear(st->req_referrer);
 	sstrlcpy(st->req_local_addr, get_local_address());
 	sstrlcpy(st->req_remote_addr, get_peer_address());
@@ -415,8 +481,11 @@
 		sstrlcpy(st->server_host, buf);
 
 	st->server_port = DEFAULT_PORT;
-	st->server_tls_port = DEFAULT_TLS_PORT;
-
+	st->server_tls = 0;
+	#ifdef HAVE_TLS
+	st->tls_ctx = NULL;
+	st->tls_cctx = NULL;
+	#endif
 	st->default_filetype = DEFAULT_TYPE;
 	sstrlcpy(st->map_file, DEFAULT_MAP);
 	sstrlcpy(st->tag_file, DEFAULT_TAG);
@@ -452,7 +521,6 @@
 	st->opt_caps = TRUE;
 	st->opt_shm = TRUE;
 	st->opt_root = TRUE;
-	st->opt_proxy = TRUE;
 	st->debug = FALSE;
 
 	/* Load default suffix -> filetype mappings */
@@ -483,11 +551,6 @@
 	shm_state *shm;
 	int shmid;
 #endif
-#ifdef ENABLE_HAPROXY1
-	char remote[BUFSIZE];
-	char local[BUFSIZE];
-	int dummy;
-#endif
 
 	/* Get the name of this binary */
 	if ((c = strrchr(argv[0], '/'))) sstrlcpy(self, c + 1);
@@ -498,7 +561,6 @@
 	setlocale(LC_TIME, DATE_LOCALE);
 #endif
 	init_state(&st);
-	srand(time(NULL) / (getpid() + getppid()));
 
 	/* Handle command line arguments */
 	parse_args(&st, argc, argv);
@@ -506,13 +568,6 @@
 	/* Open syslog() */
 	if (st.opt_syslog) openlog(self, LOG_PID, LOG_DAEMON);
 
-	/* Check if TCP wrappers have something to say about this connection */
-#ifdef HAVE_LIBWRAP
-	if (sstrncmp(st.req_remote_addr, UNKNOWN_ADDR) != MATCH &&
-	    hosts_ctl(self, STRING_UNKNOWN, st.req_remote_addr, STRING_UNKNOWN) == WRAP_DENIED)
-		die(&st, ERR_ACCESS, "Refused connection");
-#endif
-
 	/* Make sure the computer is turned on */
 #ifdef __HAIKU__
 	if (is_computer_on() != TRUE)
@@ -522,7 +577,7 @@
 	/* Refuse to run as root */
 #ifdef HAVE_PASSWD
 	if (st.opt_root && getuid() == 0)
-		die(&st, ERR_ACCESS, "Cowardly refusing to run as root");
+		die(&st, ERR_ACCESS, "Refusing to run as root");
 #endif
 
 	/* Try to get shared memory */
@@ -563,33 +618,78 @@
 #endif
 		platform(&st);
 
-	/* Read selector */
-get_selector:
+#ifdef HAVE_TLS
+	struct tls_config *tlscfg;
+	struct tls *req_fd;
+	char wbuf[BUFSIZE];
+	ssize_t w = 0;
+	ssize_t wr = 0;
+		
+	if (st.server_tls == 1){
+		sstrlcpy(st.server_description, "TLS");
+		/* st.tls_ctx = gtls_init(&st); */ 
+		/* int gtls_handshake(st.tls_ctx); */
+		/* if (tls_accept_socket(ctx, &cctx, gop_sd) == -1) */
+		if (st.debug) syslog(LOG_INFO, "Running in TLS mode");
+		int gop_sdi, gop_sdo, i;
+		int connfd, s;
+		struct sockaddr_in cliaddr;
+		socklen_t cliaddrsize = sizeof(cliaddr);
+		s = getpeername(0, (struct sockaddr *) &cliaddr, &cliaddrsize);
+
+/*		connfd = accept(s, (struct sockaddr *)&cliaddr,
+*				    &cliaddrsize, SOCK_NONBLOCK);
+*/
+		connfd = s+1;
+		gop_sdi = dup(STDIN_FILENO);
+		gop_sdo = dup(STDOUT_FILENO);
+
+		
+		if (tls_init() == -1)
+			if (st.debug) syslog(LOG_INFO, "tls_init() failed");
+		tlscfg = tls_config_new();
+		if (tls_config_set_ca_file(tlscfg, TLS_CA) == -1)
+			if (st.debug) syslog(LOG_INFO, "Cannot set CA file");
+		if (tls_config_set_key_file(tlscfg, TLS_KEY) == -1)
+			if (st.debug) syslog(LOG_INFO, "Cannot set key");
+		if (tls_config_set_cert_file(tlscfg, TLS_CERT) == -1)
+			if (st.debug) syslog(LOG_INFO, "Cannot set cert");
+		if ((st.tls_ctx = tls_server()) == NULL)
+			if (st.debug) syslog(LOG_INFO, "Cannot create TLS server");
+		if (tls_configure(st.tls_ctx, tlscfg) == -1)
+			if (st.debug) syslog(LOG_INFO, "tls_configure failed (%s)", tls_error(st.tls_ctx));
+			
+		if (tls_accept_socket(st.tls_ctx, &st.tls_cctx, connfd) == -1)
+			if (st.debug) syslog(LOG_INFO, "Cannot accept tls  (%s)", tls_error(st.tls_ctx));
+		do {
+			if ((i = tls_handshake(st.tls_cctx)) == -1)
+				{
+				if (st.debug) syslog(LOG_INFO, "Cannot handshake (%s)", 
+					tls_error(st.tls_cctx));
+				exit(1);
+			}
+		} while (i == TLS_WANT_POLLIN || i == TLS_WANT_POLLOUT);
+		
+/*		req_fd = malloc(sizeof(st.tls_cctx));*/
+		req_fd = st.tls_cctx;
+}
+#endif	
+
+	if (st.server_tls == 1){
+		if (w = tls_read(req_fd, selector, sizeof(selector)) == NULL)
+			selector[0] = '\0';
+		if (st.debug) syslog(LOG_INFO, "[tls] %zd bytes read", w);
+	
+	}else{
 	if (fgets(selector, sizeof(selector) - 1, stdin) == NULL)
 		selector[0] = '\0';
+	}
 
 	/* Remove trailing CRLF */
 	chomp(selector);
-
+	
 	if (st.debug) syslog(LOG_INFO, "client sent us \"%s\"", selector);
 
-	/* Handle HAproxy/Stunnel proxy protocol v1 */
-#ifdef ENABLE_HAPROXY1
-	if (sstrncmp(selector, "PROXY TCP") == MATCH && st.opt_proxy) {
-		if (st.debug) syslog(LOG_INFO, "got proxy protocol header \"%s\"", selector);
-
-		sscanf(selector, "PROXY TCP%d %s %s %d %d",
-			&dummy, remote, local, &dummy, &st.server_port);
-
-		/* Strip ::ffff: IPv4-in-IPv6 prefix and override old addresses */
-		sstrlcpy(st.req_local_addr, local + ((sstrncmp(local, "::ffff:") == MATCH) ? 7 : 0));
-		sstrlcpy(st.req_remote_addr, remote + ((sstrncmp(remote, "::ffff:") == MATCH) ? 7 : 0));
-
-		/* My precious \o/ */
-		goto get_selector;
-	}
-#endif
-
 	/* Handle hURL: redirect page */
 	if (sstrncmp(selector, "URL:") == MATCH) {
 		st.req_filetype = TYPE_HTML;
@@ -600,13 +700,24 @@
 
 	/* Handle gopher+ root requests (UMN gopher client is seriously borken) */
 	if (sstrncmp(selector, "\t$") == MATCH) {
-		printf("+-1" CRLF);
-		printf("+INFO: 1Main menu\t\t%s\t%i" CRLF,
-			st.server_host,
-			st.server_port);
-		printf("+VIEWS:" CRLF " application/gopher+-menu: <512b>" CRLF);
-		printf("." CRLF);
-
+		
+		if (st.server_tls == 1){
+			snprintf(wbuf, BUFSIZE, "+-1" CRLF);
+			snprintf(wbuf, BUFSIZE, "+INFO: 1Main menu\t\t%s\t%i" CRLF,
+				st.server_host,
+				st.server_port);
+			snprintf(wbuf, BUFSIZE, "+VIEWS:" CRLF " application/gopher+-menu: <512b>" CRLF);
+			snprintf(wbuf, BUFSIZE, "." CRLF);
+			w = tls_write(req_fd, wbuf + wr, strlen(wbuf) - wr);
+			
+		} else {
+			printf("+-1" CRLF);
+			printf("+INFO: 1Main menu\t\t%s\t%i" CRLF,
+				st.server_host,
+				st.server_port);
+			printf("+VIEWS:" CRLF " application/gopher+-menu: <512b>" CRLF);
+			printf("." CRLF);
+		}
 		if (st.debug) syslog(LOG_INFO, "got a request for gopher+ root menu");
 		return OK;
 	}
@@ -629,25 +740,6 @@
 	if (shm) get_shm_session(&st, shm);
 #endif
 
-
-	/* Parse <tab>search from selector */
-	if ((c = strchr(selector, '\t'))) {
-		sstrlcpy(st.req_search, c + 1);
-		*c = '\0';
-	}
-
-	/* Parse ?query from selector */
-	if (st.opt_query && (c = strchr(selector, '?'))) {
-		sstrlcpy(st.req_query_string, c + 1);
-		*c = '\0';
-	}
-
-	/* Parse ;vhost from selector */
-	if (st.opt_vhost && (c = strchr(selector, ';'))) {
-		sstrlcpy(st.server_host, c + 1);
-		*c = '\0';
-	}
-
 	/* Loop through the selector, fix it & separate query_string */
 	dest = st.req_selector;
 	if (selector[0] != '/') *dest++ = '/';
@@ -658,15 +750,27 @@
 		while (*c == '/' && *(c + 1) == '/') c++;
 		if (*c == '/' && *(c + 1) == '.' && *(c + 2) == '/') c += 2;
 
+		/* Start of a query string (either type 7 or HTTP-style)? */
+		if (*c == '\t' || (st.opt_query && *c == '?')) {
+			sstrlcpy(st.req_query_string, c + 1);
+			if ((c = strchr(st.req_query_string, '\t'))) *c = '\0';
+			break;
+		}
+
+		/* Start of virtual host hint? */
+		if (*c == ';') {
+			if (st.opt_vhost) sstrlcpy(st.server_host, c + 1);
+
+			/* Skip vhost on selector */
+			while (*c && *c != '\t') c++;
+			continue;
+		}
+
 		/* Copy valid char */
 		*dest++ = *c++;
 	}
 	*dest = '\0';
 
-	/* Main query parameters compatibility with older versions of Gophernicus */
-	if (*st.req_query_string && !*st.req_search) sstrlcpy(st.req_search, st.req_query_string);
-	if (!*st.req_query_string && *st.req_search) sstrlcpy(st.req_query_string, st.req_search);
-
 	/* Remove encodings from selector */
 	strndecode(st.req_selector, st.req_selector, sizeof(st.req_selector));
 
@@ -749,8 +853,7 @@
 
 	/* Log the request */
 	if (st.opt_syslog) {
-		syslog(LOG_INFO, "request for \"gopher%s://%s:%i/%c%s\" from %s",
-			(st.server_port == st.server_tls_port ? "s" : ""),
+		syslog(LOG_INFO, "(main) request for \"gopher://%s:%i/%c%s\" from %s",
 			st.server_host,
 			st.server_port,
 			st.req_filetype,
diff -Naur --exclude .git gophernicus-2.5/gophernicus.env gophernicus-CGX/gophernicus.env
--- gophernicus-2.5/gophernicus.env	Thu Feb  2 10:39:43 2017
+++ gophernicus-CGX/gophernicus.env	Thu Jan  1 01:00:00 1970
@@ -1,10 +0,0 @@
-# Options for Gophernicus
-#
-# See README or run "in.gophernicus -?" to see a full list of
-# configuration options.
-#
-# Example:
-# OPTIONS="-h full.hostname -D \"I find your lack of gopher disturbing.\""
-#
-# Uncomment and add your options here:
-#OPTIONS=""
diff -Naur --exclude .git gophernicus-2.5/gophernicus.h gophernicus-CGX/gophernicus.h
--- gophernicus-2.5/gophernicus.h	Sat Jun 24 12:45:22 2017
+++ gophernicus-CGX/gophernicus.h	Mon Nov 19 22:15:35 2018
@@ -1,5 +1,5 @@
 /*
- * Gophernicus - Copyright (c) 2009-2017 Kim Holviala <kim@holviala.com>
+ * Gophernicus - Copyright (c) 2009-2014 Kim Holviala <kim@holviala.com>
  * All rights reserved.
  * 
  * Redistribution and use in source and binary forms, with or without
@@ -31,7 +31,6 @@
  */
 #undef  ENABLE_STRICT_RFC1436	/* Follow RFC1436 to the letter */
 #undef  ENABLE_AUTOHIDING	/* Hide manually listed resources from generated menus */
-#define ENABLE_HAPROXY1		/* Autodetect HAproxy/Stunnel proxy protocol v1 */
 
 
 /*
@@ -48,14 +47,14 @@
 #define HAVE_UNAME		/* uname() */
 #define HAVE_POPEN		/* popen() */
 #undef  HAVE_STRLCPY		/* strlcpy() from OpenBSD */
+#undef  HAVE_TLS		/* libtls on OpenBSD */
 #undef  HAVE_SENDFILE		/* sendfile() in Linux & others */
-/* #undef  HAVE_LIBWRAP		   autodetected, don't enable here */
 
 /* Linux */
 #ifdef __linux
 #undef  PASSWD_MIN_UID
 #define PASSWD_MIN_UID 500
-#define _FILE_OFFSET_BITS 64
+#define HAVE_SENDFILE
 #endif
 
 /* Embedded Linux with uClibc */
@@ -73,6 +72,7 @@
 /* OpenBSD */
 #ifdef __OpenBSD__
 #define HAVE_STRLCPY
+#define HAVE_TLS
 #endif
 
 /* MacOS */
@@ -82,11 +82,6 @@
 #endif
 #endif
 
-/* AIX */
-#if defined(_AIX)
-#define _LARGE_FILES 1
-#endif
-
 /* Add other OS-specific defines here */
 
 /*
@@ -105,7 +100,6 @@
 #include <errno.h>
 #include <pwd.h>
 #include <limits.h>
-#include <ctype.h>
 
 #ifdef HAVE_SENDFILE
 #include <sys/sendfile.h>
@@ -129,6 +123,11 @@
 #include <arpa/inet.h>
 #endif
 
+#ifdef HAVE_TLS
+#include <tls.h>
+#include <err.h>
+#endif
+
 #ifdef HAVE_UNAME
 #include <sys/utsname.h>
 #endif
@@ -138,10 +137,6 @@
 size_t strlcat(char *dst, const char *src, size_t siz);
 #endif
 
-#ifdef HAVE_LIBWRAP
-#include <tcpd.h>
-#endif
-
 /*
  * Compile-time configuration
  */
@@ -160,9 +155,7 @@
 #define ERROR		-1
 
 #define MATCH		0
-#define WRAP_DENIED	0
 
-
 /* Gopher filetypes */
 #define TYPE_TEXT	'0'
 #define TYPE_MENU	'1'
@@ -195,20 +188,26 @@
 #define HTTP_USERAGENT	"Unknown gopher client"
 
 /* Defaults for settings */
-#define DEFAULT_HOST		"localhost"
-#define DEFAULT_PORT		70
-#define DEFAULT_TLS_PORT	0
-#define DEFAULT_TYPE		TYPE_TEXT
-#define DEFAULT_MAP		"gophermap"
-#define DEFAULT_TAG		"gophertag"
-#define DEFAULT_CGI		"/cgi-bin/"
-#define DEFAULT_USERDIR		"public_gopher"
-#define DEFAULT_WIDTH		76
-#define DEFAULT_CHARSET		US_ASCII
-#define MIN_WIDTH		33
-#define MAX_WIDTH		200
-#define UNKNOWN_ADDR		"unknown"
+#define DEFAULT_HOST	"localhost"
+#define DEFAULT_PORT	70
+#define DEFAULT_TYPE	TYPE_TEXT
+#define DEFAULT_MAP	"gophermap"
+#define DEFAULT_TAG	"gophertag"
+#define DEFAULT_CGI	"/cgi-bin/"
+#define DEFAULT_USERDIR	"public_gopher"
+#define DEFAULT_ADDR	"unknown"
+#define DEFAULT_WIDTH	70
+#define DEFAULT_CHARSET	US_ASCII
+#define MIN_WIDTH	33
+#define MAX_WIDTH	200
 
+/* TLS defaults */
+#ifdef HAVE_TLS
+#define TLS_CA "/etc/ssl/cert.pem"
+#define TLS_CERT "/etc/ssl/gophernicus.pem"
+#define TLS_KEY "/etc/ssl/gophernicus.key"
+#endif
+
 /* Session defaults */
 #define DEFAULT_SESSION_TIMEOUT		1800
 #define DEFAULT_SESSION_MAX_KBYTES	4194304
@@ -241,7 +240,7 @@
 #define SERVER_SOFTWARE_FULL SERVER_SOFTWARE "/" VERSION " (%s)"
 
 #define HEADER_FORMAT	"[%s]"
-#define FOOTER_FORMAT	"Gophered by Gophernicus/" VERSION " on %s"
+#define FOOTER_FORMAT	"Gophered by Gophernicus-TLS/" VERSION " on %s"
 
 #define UNITS		"KB", "MB", "GB", "TB", "PB", NULL
 #define DATE_FORMAT	"%Y-%b-%d %H:%M"	/* See man 3 strftime */
@@ -291,7 +290,6 @@
 	char req_selector[BUFSIZE];
 	char req_realpath[BUFSIZE];
 	char req_query_string[BUFSIZE];
-	char req_search[BUFSIZE];
 	char req_referrer[BUFSIZE];
 	char req_local_addr[64];
 	char req_remote_addr[64];
@@ -312,7 +310,11 @@
 	char server_host_default[64];
 	char server_host[64];
 	int  server_port;
-	int  server_tls_port;
+	int  server_tls;
+	#ifdef HAVE_TLS
+	struct tls *tls_ctx;
+	struct tls *tls_cctx;
+	#endif
 
 	char default_filetype;
 	char map_file[64];
@@ -335,7 +337,6 @@
 	int session_timeout;
 	int session_max_kbytes;
 	int session_max_hits;
-	int session_id;
 
 	/* Feature options */
 	char opt_parent;
@@ -350,14 +351,13 @@
 	char opt_caps;
 	char opt_shm;
 	char opt_root;
-	char opt_proxy;
 	char debug;
 } state;
 
 /* Shared memory for session & accounting data */
 #ifdef HAVE_SHMEM
 
-#define SHM_KEY		0xbeeb0008	/* Unique identifier + struct version */
+#define SHM_KEY		0xbeeb0006	/* Unique identifier + struct version */
 #define SHM_MODE	0600		/* Access mode for the shared memory */
 #define SHM_SESSIONS	256		/* Max amount of user sessions to track */
 
@@ -369,10 +369,10 @@
 	char req_selector[128];
 	char req_remote_addr[64];
 	char req_filetype;
-	int session_id;
 
 	char server_host[64];
 	int  server_port;
+	int  server_tls;
 } shm_session;
 
 typedef struct {
@@ -414,7 +414,7 @@
 	"mbox","M", \
 	"pdf","d","ps","d","doc","d","ppt","d","xls","d","xlsx","d","docx","d","pptx","d", \
 	"mp3","s","wav","s","mid","s","wma","s","flac","s","ogg","s","aiff","s","aac","s", \
-	"avi",";","mp4",";","mpg",";","mov",";","qt",";","asf",";","mpv",";","m4v",";","webm",";","ogv",";", \
+	"avi",";","mp4",";","mpg",";","mov",";","qt",";","asf",";","mpv",";","m4v",";", \
 	NULL, NULL
 
 /*
diff -Naur --exclude .git gophernicus-2.5/gophernicus.socket gophernicus-CGX/gophernicus.socket
--- gophernicus-2.5/gophernicus.socket	Thu Feb  2 07:52:37 2017
+++ gophernicus-CGX/gophernicus.socket	Thu Jan  1 01:00:00 1970
@@ -1,9 +0,0 @@
-[Unit]
-Description=Gophernicus gopher server
-
-[Socket]
-ListenStream=70
-Accept=yes
-
-[Install]
-WantedBy=sockets.target
diff -Naur --exclude .git gophernicus-2.5/gophernicus@.service gophernicus-CGX/gophernicus@.service
--- gophernicus-2.5/gophernicus@.service	Thu Feb  2 10:40:28 2017
+++ gophernicus-CGX/gophernicus@.service	Thu Jan  1 01:00:00 1970
@@ -1,10 +0,0 @@
-[Unit]
-Description=Gophernicus gopher server
-
-[Service]
-EnvironmentFile=-/etc/default/gophernicus
-EnvironmentFile=-/etc/sysconfig/gophernicus
-ExecStart=/usr/sbin/in.gophernicus -h %H $OPTIONS
-SuccessExitStatus=1
-StandardInput=socket
-User=nobody
diff -Naur --exclude .git gophernicus-2.5/menu.c gophernicus-CGX/menu.c
--- gophernicus-2.5/menu.c	Wed Feb  1 08:36:43 2017
+++ gophernicus-CGX/menu.c	Tue Nov 20 01:03:21 2018
@@ -1,5 +1,5 @@
 /*
- * Gophernicus - Copyright (c) 2009-2017 Kim Holviala <kim@holviala.com>
+ * Gophernicus - Copyright (c) 2009-2014 Kim Holviala <kim@holviala.com>
  * All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
@@ -95,6 +95,7 @@
 	struct passwd *pwd;
 	struct stat dir;
 	char buf[BUFSIZE];
+	char wbuf[BUFSIZE];
 	struct tm *ltime;
 	char timestr[20];
 	int width;
@@ -121,14 +122,28 @@
 		if (st->opt_date) {
 			ltime = localtime(&dir.st_mtime);
 			strftime(timestr, sizeof(timestr), DATE_FORMAT, ltime);
-
+			if (st->server_tls == 1){
+				snprintf(wbuf, BUFSIZE, 
+					"1%-*.*s   %s        -  \t/~%s/\t%s\t%i" CRLF,
+					width, width, buf, timestr, pwd->pw_name,
+					 st->server_host, st->server_port);
+				tlsprint(st, wbuf);
+			} else {
 			printf("1%-*.*s   %s        -  \t/~%s/\t%s\t%i" CRLF,
 				width, width, buf, timestr, pwd->pw_name,
 				st->server_host, st->server_port);
+			}
 		}
 		else {
+			if (st->server_tls == 1) {
+			snprintf(wbuf, BUFSIZE,
+				"1%.*s\t/~%s/\t%s\t%i" CRLF, st->out_width, buf,
+				pwd->pw_name, st->server_host_default, st->server_port);
+			tlsprint(st, wbuf);
+			} else {
 			printf("1%.*s\t/~%s/\t%s\t%i" CRLF, st->out_width, buf,
 				pwd->pw_name, st->server_host_default, st->server_port);
+			}
 		}
 	}
 
@@ -146,6 +161,7 @@
 	struct tm *ltime;
 	char timestr[20];
 	char buf[BUFSIZE];
+	char wbuf[BUFSIZE];
 	int width;
 	int num;
 	int i;
@@ -177,16 +193,28 @@
 		if (st->opt_date) {
 			ltime = localtime(&dir[i].mtime);
 			strftime(timestr, sizeof(timestr), DATE_FORMAT, ltime);
-
+			if (st->server_tls == 1) {
+				snprintf(wbuf, BUFSIZE, "1%-*.*s   %s        -  \t/;%s\t%s\t%i" CRLF,
+							width, width, buf, timestr, dir[i].name,
+							dir[i].name, st->server_port);
+				tlsprint(st, wbuf);
+			} else {
 			printf("1%-*.*s   %s        -  \t/;%s\t%s\t%i" CRLF,
 				width, width, buf, timestr, dir[i].name, 
 				dir[i].name, st->server_port);
+			}
 		}
 
 		/* Teh boring version */
 		else {
+			if (st->server_tls == 1) {
+				snprintf(wbuf, BUFSIZE, "1%.*s\t/;%s\t%s\t%i" CRLF, st->out_width, buf,
+							dir[i].name, dir[i].name, st->server_port);
+				tlsprint(st, wbuf);
+			} else {
 			printf("1%.*s\t/;%s\t%s\t%i" CRLF, st->out_width, buf,
 				dir[i].name, dir[i].name, st->server_port);
+			}
 		}
 	}
 }
@@ -269,9 +297,7 @@
 	FILE *fp;
 	struct stat file;
 	char line[BUFSIZE];
-#ifdef HAVE_POPEN
-	char command[BUFSIZE];
-#endif
+	char wbuf[BUFSIZE];
 	char *selector;
 	char *name;
 	char *host;
@@ -285,24 +311,12 @@
 
 	/* Try to figure out whether the map is executable */
 	if (stat(mapfile, &file) == OK) {
-		if ((file.st_mode & S_IXOTH)) {
-#ifdef HAVE_POPEN
-			/* Quote the command in case path has spaces */
-			snprintf(command, sizeof(command), "'%s'", mapfile);
-#endif
-			exe = TRUE;
-		}
+		if ((file.st_mode & S_IXOTH)) exe = TRUE;
 		else exe = FALSE;
 	}
 
-	/* This must be a shell include */
-	else {
-#ifdef HAVE_POPEN
-		/* Let's assume the shell command runs as is without quoting */
-		sstrlcpy(command, mapfile);
-#endif
-		exe = TRUE;
-	}
+	/* As a fallback let's just feed everything to shell.. */
+	else exe = TRUE;
 
 	/* Debug output */
 	if (st->debug) {
@@ -314,11 +328,11 @@
 #ifdef HAVE_POPEN
 	if (exe) {
 		setenv_cgi(st, mapfile);
-		if ((fp = popen(command, "r")) == NULL) return OK;
+		if ((fp = popen(mapfile , "r")) == NULL) return OK;
 	}
 	else
 #endif
-		if ((fp = fopen(mapfile, "r")) == NULL) return OK;
+		if ((fp = fopen(mapfile , "r")) == NULL) return OK;
 
 	/* Read lines one by one */
 	while (fgets(line, sizeof(line) - 1, fp)) {
@@ -406,9 +420,14 @@
 		if (sstrncmp(selector, "URL:") == MATCH ||
 		    selector[0] == '/' ||
 		    host != st->server_host) {
-
+			if (st->server_tls == 1) {
+				snprintf(wbuf, BUFSIZE, "%c%s\t%s\t%s\t%i" CRLF, type, name,
+							selector, host, port);
+				tlsprint(st, wbuf);
+			} else {
 			printf("%c%s\t%s\t%s\t%i" CRLF, type, name,
 				selector, host, port);
+			}
 		}
 
 		/* Handle relative resources */
@@ -445,6 +464,7 @@
 	struct tm *ltime;
 	struct stat file;
 	char buf[BUFSIZE];
+	char wbuf[BUFSIZE];
 	char pathname[BUFSIZE];
 	char displayname[BUFSIZE];
 	char encodedname[BUFSIZE];
@@ -529,9 +549,17 @@
 			if (strcmp(parent, ROOT) == MATCH) parent++;
 
 			/* Print link */
+			if (st->server_tls == 1) {
+				snprintf(wbuf, BUFSIZE, "1%-*s\t%s/\t%s\t%i" CRLF,
+							st->opt_date ? (st->out_width - 1) : (int) strlen(PARENT),
+							PARENT, parent, st->server_host, st->server_port);
+				tlsprint(st, wbuf);
+			} else {
+
 			printf("1%-*s\t%s/\t%s\t%i" CRLF,
 				st->opt_date ? (st->out_width - 1) : (int) strlen(PARENT),
 				PARENT, parent, st->server_host, st->server_port);
+			}
 		}
 	}
 
@@ -612,6 +640,17 @@
 				n = width - strcut(displayname, width);
 				strrepeat(buf, ' ', n);
 
+				if (st->server_tls == 1) {
+					snprintf(wbuf, BUFSIZE, "1%s%s   %s        -  \t%s%s/\t%s\t%i" CRLF,
+						displayname,
+						buf,
+						timestr,
+						st->req_selector,
+						encodedname,
+						st->server_host,
+						st->server_port);
+					tlsprint(st, wbuf);
+				} else {
 				printf("1%s%s   %s        -  \t%s%s/\t%s\t%i" CRLF,
 					displayname,
 					buf,
@@ -620,17 +659,28 @@
 					encodedname,
 					st->server_host,
 					st->server_port);
+				}
 			}
 
 			/* Regular dir listing */
 			else {
 				strcut(displayname, st->out_width);
+				if (st->server_tls == 1) {
+					snprintf(wbuf, BUFSIZE, "1%s\t%s%s/\t%s\t%i" CRLF,
+						displayname,
+						st->req_selector,
+						encodedname,
+						st->server_host,
+						st->server_port);
+					tlsprint(st, wbuf);
+				} else {
 				printf("1%s\t%s%s/\t%s\t%i" CRLF,
 					displayname,
 					st->req_selector,
 					encodedname,
 					st->server_host,
 					st->server_port);
+				}
 			}
 
 			continue;
@@ -652,6 +702,18 @@
 			n = width - strcut(displayname, width);
 			strrepeat(buf, ' ', n);
 
+			if (st->server_tls) {
+				snprintf(wbuf, BUFSIZE, "%c%s%s   %s %s\t%s%s\t%s\t%i" CRLF, type,
+					displayname,
+					buf,
+					timestr,
+					sizestr,
+					st->req_selector,
+					encodedname,
+					st->server_host,
+					st->server_port);
+				tlsprint(st, wbuf);
+			} else {
 			printf("%c%s%s   %s %s\t%s%s\t%s\t%i" CRLF, type,
 				displayname,
 				buf,
@@ -661,17 +723,28 @@
 				encodedname,
 				st->server_host,
 				st->server_port);
+			}
 		}
 
 		/* Regular file listing */
 		else {
 			strcut(displayname, st->out_width);
+			if (st->server_tls == 1) {
+				snprintf(wbuf, BUFSIZE, "%c%s\t%s%s\t%s\t%i" CRLF, type,
+						displayname,
+						st->req_selector,
+						encodedname,
+						st->server_host,
+						st->server_port);
+				tlsprint(st, wbuf);
+			} else {
 			printf("%c%s\t%s%s\t%s\t%i" CRLF, type,
 				displayname,
 				st->req_selector,
 				encodedname,
 				st->server_host,
 				st->server_port);
+			}
 		}
 	}
 
diff -Naur --exclude .git gophernicus-2.5/options.c gophernicus-CGX/options.c
--- gophernicus-2.5/options.c	Mon Feb  6 12:12:28 2017
+++ gophernicus-CGX/options.c	Mon Nov 19 14:49:09 2018
@@ -1,5 +1,5 @@
 /*
- * Gophernicus - Copyright (c) 2009-2017 Kim Holviala <kim@holviala.com>
+ * Gophernicus - Copyright (c) 2009-2014 Kim Holviala <kim@holviala.com>
  * All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
@@ -97,11 +97,11 @@
 	int opt;
 
 	/* Parse args */
-	while ((opt = getopt(argc, argv, "h:p:T:r:t:g:a:c:u:m:l:w:o:s:i:k:f:e:R:D:L:A:P:n:dbv?-")) != ERROR) {
+	while ((opt = getopt(argc, argv, "h:p:z:r:t:g:a:c:u:m:l:w:o:s:i:k:f:e:R:D:L:A:P:n:db?-")) != ERROR) {
 		switch(opt) {
 			case 'h': sstrlcpy(st->server_host, optarg); break;
 			case 'p': st->server_port = atoi(optarg); break;
-			case 'T': st->server_tls_port = atoi(optarg); break;
+			case 'z': st->server_tls = 1; break;
 			case 'r': sstrlcpy(st->server_root, optarg); break;
 			case 't': st->default_filetype = *optarg; break;
 			case 'g': sstrlcpy(st->map_file, optarg); break;
@@ -142,16 +142,10 @@
 				if (*optarg == 'a') { st->opt_caps = FALSE; break; }
 				if (*optarg == 'm') { st->opt_shm = FALSE; break; }
 				if (*optarg == 'r') { st->opt_root = FALSE; break; }
-				if (*optarg == 'p') { st->opt_proxy = FALSE; break; }
 				break;
 
 			case 'd': st->debug = TRUE; break;
 			case 'b': puts(license); exit(EXIT_SUCCESS);
-
-			case 'v': 
-				printf("%s/%s \"%s\" (built %s)\n", SERVER_SOFTWARE, VERSION, CODENAME, __DATE__);
-				exit(EXIT_SUCCESS);
-
 			default : puts(readme); exit(EXIT_SUCCESS);
 		}
 	}
diff -Naur --exclude .git gophernicus-2.5/org.gophernicus.server.plist gophernicus-CGX/org.gophernicus.server.plist
--- gophernicus-2.5/org.gophernicus.server.plist	Tue Dec 29 10:13:00 2015
+++ gophernicus-CGX/org.gophernicus.server.plist	Mon Nov 19 14:13:04 2018
@@ -6,7 +6,7 @@
 	<string>org.gophernicus.server</string>
 	<key>ProgramArguments</key>
 	<array>
-		<string>/usr/local/sbin/in.gophernicus</string>
+		<string>/usr/sbin/in.gophernicus</string>
 		<string>-h@HOSTNAME@</string>
 		<string>-r/Library/GopherServer</string>
 	</array>
diff -Naur --exclude .git gophernicus-2.5/platform.c gophernicus-CGX/platform.c
--- gophernicus-2.5/platform.c	Wed Feb  1 08:36:43 2017
+++ gophernicus-CGX/platform.c	Mon Nov 19 14:13:04 2018
@@ -1,5 +1,5 @@
 /*
- * Gophernicus - Copyright (c) 2009-2017 Kim Holviala <kim@holviala.com>
+ * Gophernicus - Copyright (c) 2009-2014 Kim Holviala <kim@holviala.com>
  * All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
@@ -35,11 +35,13 @@
 #if defined(_AIX) || defined(__linux) || defined(__APPLE__)
 	FILE *fp;
 #endif
+#if defined(__arm__) || defined(__mips__) || defined(__APPLE__)
+	char buf[BUFSIZE];
+#endif
 #ifdef __linux
 	struct stat file;
 #endif
 	struct utsname name;
-	char buf[BUFSIZE];
 	char sysname[64];
 	char release[64];
 	char machine[64];
@@ -112,7 +114,7 @@
 	}
 #endif
 
-	/* Linux uname() just says Linux/kernelversion - let's dig deeper... */
+	/* Linux uname() just says Linux/2.6 - let's dig deeper... */
 #ifdef __linux
 
 	/* Most Linux ARM/MIPS boards have hardware name in /proc/cpuinfo */
@@ -134,45 +136,6 @@
 	}
 #endif
 
-	/* Get hardware type from DMI data */
-	if (!*st->server_description && (fp = fopen("/sys/class/dmi/id/board_vendor" , "r"))) {
-		fgets(buf, sizeof(buf), fp);
-		fclose(fp);
-
-		sstrlcpy(st->server_description, buf);
-		chomp(st->server_description);
-
-		if ((fp = fopen("/sys/class/dmi/id/board_name" , "r"))) {
-			fgets(buf, sizeof(buf), fp);
-			fclose(fp);
-
-			if (*st->server_description) sstrlcat(st->server_description, " ");
-			sstrlcat(st->server_description, buf);
-			chomp(st->server_description);
-		}
-	}
-
-	/* No DMI? Get possible hypervisor name */
-	if (!*st->server_description && (fp = fopen("/sys/hypervisor/type" , "r"))) {
-		fgets(buf, sizeof(buf), fp);
-		fclose(fp);
-
-		chomp(buf);
-		ucfirst(buf);
-
-		if (*buf) snprintf(st->server_description, sizeof(st->server_description), "%s virtual machine", buf);
-	}
-
-	/* Identify Gentoo */
-	if (!*sysname && (fp = fopen("/etc/gentoo-release", "r"))) {
-		fgets(sysname, sizeof(sysname), fp);
-		fclose(fp);
-
-		if ((c = strstr(sysname, "release "))) sstrlcpy(release, c + 8);
-		if ((c = strchr(release, ' '))) *c = '\0';
-		if ((c = strchr(sysname, ' '))) *c = '\0';
-	}
-
 	/* Identify RedHat */
 	if (!*sysname && (fp = fopen("/etc/redhat-release", "r"))) {
 		fgets(sysname, sizeof(sysname), fp);
@@ -180,8 +143,8 @@
 
 		if ((c = strstr(sysname, "release "))) sstrlcpy(release, c + 8);
 		if ((c = strchr(release, ' '))) *c = '\0';
-		if ((c = strchr(sysname, ' '))) *c = '\0';
 
+		if ((c = strchr(sysname, ' '))) *c = '\0';
 		if (strcmp(sysname, "Red") == MATCH) sstrlcpy(sysname, "RedHat");
 	}
 
@@ -193,20 +156,6 @@
 		if ((c = strchr(sysname, ' '))) {
 			sstrlcpy(release, c + 1);
 			*c = '\0';
-		}
-	}
-
-	/* Identify CRUX */
-	if (!*sysname && stat("/usr/bin/crux", &file) == OK && (file.st_mode & S_IXOTH)) {
-
-		sstrlcpy(sysname, "CRUX");
-
-		if ((fp = popen("/usr/bin/crux", "r"))) {
-			fgets(buf, sizeof(buf), fp);
-			pclose(fp);
-
-			if ((c = strchr(buf, ' ')) && (c = strchr(c + 1, ' ')))
-				sstrlcpy(release, c + 1);
 		}
 	}
 
diff -Naur --exclude .git gophernicus-2.5/session.c gophernicus-CGX/session.c
--- gophernicus-2.5/session.c	Sat Feb  4 08:21:43 2017
+++ gophernicus-CGX/session.c	Mon Nov 19 14:13:04 2018
@@ -1,5 +1,5 @@
 /*
- * Gophernicus - Copyright (c) 2009-2017 Kim Holviala <kim@holviala.com>
+ * Gophernicus - Copyright (c) 2009-2014 Kim Holviala <kim@holviala.com>
  * All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
@@ -65,6 +65,7 @@
 	/* Get session data */
 	if (st->opt_vhost) {
 		sstrlcpy(st->server_host, shm->session[i].server_host);
+		st->server_port = shm->session[i].server_port;
 	}
 }
 #endif
@@ -96,7 +97,6 @@
 				sstrlcpy(shm->session[i].req_remote_addr, st->req_remote_addr);
 				shm->session[i].hits = 0;
 				shm->session[i].kbytes = 0;
-				shm->session[i].session_id = rand();
 				break;
 			}
 		}
@@ -107,17 +107,13 @@
 
 	/* Get referrer from old session data */
 	if (*shm->session[i].server_host) {
-		snprintf(buf, sizeof(buf), "gopher%s://%s:%i/%c%s",
-			(shm->session[i].server_port == st->server_tls_port ? "s" : ""),
+		snprintf(buf, sizeof(buf), "gopher://%s:%i/%c%s",
 			shm->session[i].server_host,
 			shm->session[i].server_port,
 			shm->session[i].req_filetype,
 			shm->session[i].req_selector);
 		sstrlcpy(st->req_referrer, buf);
 	}
-
-	/* Get public session id */
-	st->session_id = shm->session[i].session_id;
 
 	/* Update session data */
 	sstrlcpy(shm->session[i].server_host, st->server_host);
diff -Naur --exclude .git gophernicus-2.5/string.c gophernicus-CGX/string.c
--- gophernicus-2.5/string.c	Wed Feb  1 08:36:43 2017
+++ gophernicus-CGX/string.c	Mon Nov 19 14:13:04 2018
@@ -1,5 +1,5 @@
 /*
- * Gophernicus - Copyright (c) 2009-2017 Kim Holviala <kim@holviala.com>
+ * Gophernicus - Copyright (c) 2009-2014 Kim Holviala <kim@holviala.com>
  * All rights reserved.
  *
  * Redistribution and use in source and binary forms, with or without
@@ -27,16 +27,6 @@
 
 
 /*
- * Make a string's first character uppercase
- */
-void ucfirst(char *str)
-{
-	if (str == NULL || !*str) return;
-	*str = toupper(*str);
-}
-
-
-/*
  * Repeat a character num times and zero-terminate
  */
 void strrepeat(char *dest, char c, size_t num)
@@ -63,7 +53,7 @@
  */
 size_t strcut(char *str, size_t width)
 {
-	unsigned char c = '\0';
+	unsigned char c;
 	int w = 0;
 	int i;
 
